{
	"compiler": {
		"version": "0.5.1+commit.c8a2cb62"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "EthToPolyTxHashIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "fromChainId",
						"type": "uint64"
					},
					{
						"name": "fromChainTx",
						"type": "bytes32"
					}
				],
				"name": "checkIfFromChainTxExist",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "key1",
						"type": "bytes32"
					},
					{
						"name": "key2",
						"type": "bytes32"
					},
					{
						"name": "value",
						"type": "bytes"
					}
				],
				"name": "putExtraData",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "bytes32"
					},
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "ExtraData",
				"outputs": [
					{
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "ethTxHashIndex",
						"type": "uint256"
					}
				],
				"name": "getEthTxHash",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "unpause",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "key1",
						"type": "bytes32"
					},
					{
						"name": "key2",
						"type": "bytes32"
					}
				],
				"name": "getExtraData",
				"outputs": [
					{
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "curEpochPkBytes",
						"type": "bytes"
					}
				],
				"name": "putCurEpochConPubKeyBytes",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "ethTxHash",
						"type": "bytes32"
					}
				],
				"name": "putEthTxHash",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "EthToPolyTxHashMap",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCurEpochStartHeight",
				"outputs": [
					{
						"name": "",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "CurEpochStartHeight",
				"outputs": [
					{
						"name": "",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCurEpochConPubKeyBytes",
				"outputs": [
					{
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "pause",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "curEpochStartHeight",
						"type": "uint32"
					}
				],
				"name": "putCurEpochStartHeight",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "fromChainId",
						"type": "uint64"
					},
					{
						"name": "fromChainTx",
						"type": "bytes32"
					}
				],
				"name": "markFromChainTxExist",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ConKeepersPkBytes",
				"outputs": [
					{
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getEthTxHashIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/core/cross_chain_manager/data/EthCrossChainData.sol": "EthCrossChainData"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/core/cross_chain_manager/data/EthCrossChainData.sol": {
			"keccak256": "0x4e573923e4f3a3b8d6da456442a1ac9d3016276b5a7da738d029b96b2b0f6597",
			"urls": [
				"bzzr://b425fe49014ca828967b00b26461eb227178226935d7de24704f335711c4bd58"
			]
		},
		"contracts/core/cross_chain_manager/interface/IEthCrossChainData.sol": {
			"keccak256": "0xaf3e10d6909d4c76a0583f3a65ba299611ae0df291863e2c4b4f26baa18c4d28",
			"urls": [
				"bzzr://9ea829eab9413246bf2d5429c7ef63728f5e2b2f31940246b0d0a046637fb8c2"
			]
		},
		"contracts/libs/GSN/Context.sol": {
			"keccak256": "0x62834f1e365b937e197514f4eb6a994fa6f8d0c9bea273cf88756a121ea2157a",
			"urls": [
				"bzzr://5f53bff5b1a25aae232772869dcf29adbc2aac2411a285f5a334ff4c3a0aa4ef"
			]
		},
		"contracts/libs/lifecycle/Pausable.sol": {
			"keccak256": "0x0691249f42479f68d9be0f53ba336876e69993152b221333d55e4d3c833150b9",
			"urls": [
				"bzzr://10636c41f1bacb9a89d6e807f23cb9d1bcfd4823a0dcf5990e54a77566da2416"
			]
		},
		"contracts/libs/ownership/Ownable.sol": {
			"keccak256": "0xecaaefb54e739ce458d4fdc7a7e08bfcca816c20ca0539a16366995839b1f074",
			"urls": [
				"bzzr://f33439f25d73e6abba29a52b7c280f90cc81cafa56ee7eac968f6d4fa46a1127"
			]
		}
	},
	"version": 1
}