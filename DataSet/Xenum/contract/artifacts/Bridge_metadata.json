{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "ControllerOnly",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FunctionNotPayable",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountRequested",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountRemaining",
						"type": "uint256"
					}
				],
				"name": "InsufficientFunds",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "receipt",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "message",
						"type": "bytes"
					}
				],
				"name": "BroadcastSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract IMessageReceiver",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "from",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fromNetworkId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "receipt",
						"type": "bool"
					}
				],
				"name": "MessageReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "messageId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "destination",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "recipient",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "receipt",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "message",
						"type": "bytes"
					}
				],
				"name": "MessageSent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokenClaimedFungible",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokenClaimedMixedFungible",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "TokenClaimedNonFungible",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "networkId",
						"type": "uint256"
					}
				],
				"name": "TokenTransferFungible",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "networkId",
						"type": "uint256"
					}
				],
				"name": "TokenTransferMixedFungible",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "networkId",
						"type": "uint256"
					}
				],
				"name": "TokenTransferNonFungible",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "bridgeClaimFungible",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "bridgeClaimMixedFungible",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "bridgeClaimNonFungible",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chainId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_controller",
						"type": "address"
					}
				],
				"name": "changeController",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155BatchReceived",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IMessageReceiver",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_messageId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_sender",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_fromNetworkId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_receipt",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					}
				],
				"name": "relayMessage",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_messageId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_receipt",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "sendBroadcast",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_messageId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_destination",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_recipient",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "_receipt",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "sendMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "networkId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "transferFungible",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_networkId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "transferMixedFungible",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_networkId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "transferNonFungible",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"bridgeClaimFungible(address,address,uint256)": {
					"details": "Used by bridge network to transfer the item directly to user without need for manual claiming"
				},
				"bridgeClaimMixedFungible(address,address,uint256,uint256)": {
					"details": "Used by bridge network to transfer the item directly to user without need for manual claiming"
				},
				"bridgeClaimNonFungible(address,address,uint256)": {
					"details": "Used by bridge network to transfer the item directly to user without need for manual claiming"
				},
				"chainId()": {
					"details": "Returns the chainId of the network this contract is deployed on"
				},
				"onERC721Received(address,address,uint256,bytes)": {
					"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"transferFungible(address,uint256,uint256,bytes)": {
					"details": "Transfers an ERC20 token to a different chain This function simply moves the caller's tokens to this contract, and emits a `TokenTransferFungible` event"
				},
				"transferMixedFungible(address,uint256,uint256,uint256,bytes)": {
					"details": "Transfers an ERC1155 token to a different chain This function simply moves the caller's tokens to this contract, and emits a `TokenTransferMixedFungible` event"
				},
				"transferNonFungible(address,uint256,uint256,bytes)": {
					"details": "Transfers an ERC721 token to a different chain This function simply moves the caller's tokens to this contract, and emits a `TokenTransferNonFungible` event"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"stateVariables": {
				"__gap": {
					"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Xenum/contracts/Bridge.sol": "Bridge"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
			"license": "MIT",
			"urls": [
				"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
				"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
			"license": "MIT",
			"urls": [
				"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
				"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
			"keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
				"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
			"keccak256": "0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8",
			"license": "MIT",
			"urls": [
				"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83",
				"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol": {
			"keccak256": "0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb",
				"dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol": {
			"keccak256": "0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a",
			"license": "MIT",
			"urls": [
				"bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a",
				"dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
			"license": "MIT",
			"urls": [
				"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
				"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol": {
			"keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
				"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
			"keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
				"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
			"keccak256": "0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08",
			"license": "MIT",
			"urls": [
				"bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d",
				"dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
			"license": "MIT",
			"urls": [
				"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
				"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
			"keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
				"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
			"license": "MIT",
			"urls": [
				"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
				"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
			]
		},
		"Xenum/contracts/Bridge.sol": {
			"keccak256": "0x5b8d0c5836f3d04841f55fbb42354c0fb57a260ab67ad55bca326c5abece6531",
			"license": "MIT",
			"urls": [
				"bzz-raw://343b7ddb53367830cf8a1aa818183bbcaee38319a5d10b9e295d1efed2c70bb2",
				"dweb:/ipfs/QmbCJKTFZQq9n53A4kBx6VCM27NXVhQwRiZUnqggtzJBCs"
			]
		},
		"Xenum/contracts/Controllable.sol": {
			"keccak256": "0xc7941daf069ffe68f5c86ac3cbd7f171c0de2a4a9a20657d359f974b5167df88",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee927c8e28bf834357327688eecd1c9535588a94af5f51c3c92920efb0c86469",
				"dweb:/ipfs/QmRXLU14RR6xvwfnWawJUWogDBWJWrZUErjQT2nERbCMoC"
			]
		},
		"Xenum/contracts/IBridge.sol": {
			"keccak256": "0x75dbd0da865abd444bc513a12ced95ad7ed72f38fdf9304555d392d1f9fe6dd0",
			"license": "MIT",
			"urls": [
				"bzz-raw://bee6e6a3d605aac28eb54b58b03235a7e80b98e7281ca8637a0ffb97756ce375",
				"dweb:/ipfs/QmWAFRzcaVDZxmqjgbYWjvub3YbPmQ1swcPEgVDC6pzE4R"
			]
		},
		"Xenum/contracts/IBridgeComplete.sol": {
			"keccak256": "0xa1e08ef22b71ef0685b31540c9f70f7bef3683a25baa29a12fa360e04e617fde",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2d0545efc89a01b8ed73cfd49e94dbf57e959799316c57878968c090a3c2f34",
				"dweb:/ipfs/QmaQZxRLU6EPahQozPZRyrpZxJBAW3ktaAxfNxfJ74wBnn"
			]
		},
		"Xenum/contracts/IBridgeFungible.sol": {
			"keccak256": "0xd1eb53a066601cb740f31e1c3af2464ff1fef60dd8695658955bed11407822ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://c468d7aaeb8a2537c23b58f0fa1ad75b4e3d415d17455903a220d17499766ef8",
				"dweb:/ipfs/QmTMGAMKe9UBVZTR6ty1HEi94SDTBjVeBLymrgX9EYvBoX"
			]
		},
		"Xenum/contracts/IBridgeMixedFungible.sol": {
			"keccak256": "0x213fb7eaf38f3a59e26046d1c03630216dc7798d21473a23da79869e3ea64b5b",
			"license": "MIT",
			"urls": [
				"bzz-raw://c8dbda617e26777b728cf9500af76cfb893258bec7e8cdd99f76d7a08acfd466",
				"dweb:/ipfs/QmYuuDUMsdXncjoALTR3oETV99EpEQSq5SiGnA1Qcv8Ksy"
			]
		},
		"Xenum/contracts/IBridgeNonFungible.sol": {
			"keccak256": "0xaf59ac708a26e9ccb58d8a1f306497401faca42828ce22164459d404189a0c5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://818212350d1f9676f51b5164981e91f7643a58cdbc98ced046830e62e1c9fb0b",
				"dweb:/ipfs/QmUogdRzmpcjxJXyxUr9Dt43bDJeP64DmNdTBWTfrw8Wyd"
			]
		},
		"Xenum/contracts/IERC1155Bridgable.sol": {
			"keccak256": "0x12e54bc68df773410e9318dc791707b9bbe2be8aefc4d8e32da62510cbdc2731",
			"license": "MIT",
			"urls": [
				"bzz-raw://bdfe78b070819562f849d464ef435e9dc89559c68834e71e127df7018527898e",
				"dweb:/ipfs/Qme7X1ZpKfQ41GF57oJhmHFj9aJ2pLLPZ5JzeJRc8baFhE"
			]
		},
		"Xenum/contracts/IERC721Bridgable.sol": {
			"keccak256": "0xdd674e96025aa6c1a1c05eaebadded777b1c9200096d32ff546c5de4230e7d7b",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7c803bb14a1b53c4d6fa3928723c114b791a933bcd496965d91e58994f3f67f",
				"dweb:/ipfs/QmSmEMTyUsWqLG2HfCx1nnpQCUDCooLtigafTaY42ApGPW"
			]
		},
		"Xenum/contracts/IMessageReceiver.sol": {
			"keccak256": "0x7abbbdfdf346fa9a5723ccf1a04ae07473cd801d6703b1b37e5d5049b2fa2a07",
			"license": "MIT",
			"urls": [
				"bzz-raw://eeace09c071e1b728f0c820207d19f45def99bb811413f4477f5aa6d233adf4f",
				"dweb:/ipfs/QmUc8zpozKdf9uT2QfWTSux72XyTtmVst4YK9WxcVnAfMV"
			]
		}
	},
	"version": 1
}