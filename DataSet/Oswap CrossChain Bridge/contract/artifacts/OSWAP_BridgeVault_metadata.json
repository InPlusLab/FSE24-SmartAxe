{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IOSWAP_BridgeVaultTrollRegistry",
						"name": "_vaultRegistry",
						"type": "address"
					},
					{
						"internalType": "contract IOSWAP_ConfigStore",
						"name": "_configStore",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "_asset",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "mintAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLpAssetBalance",
						"type": "uint256"
					}
				],
				"name": "AddLiquidity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amendment",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "AmendOrderRequest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newImbalance",
						"type": "int256"
					}
				],
				"name": "NewOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "signers",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "canceledByOrderOwner",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newImbalance",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newProtocolFeeBalance",
						"type": "uint256"
					}
				],
				"name": "OrderCanceled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "rebalancer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "amount",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newImbalance",
						"type": "int256"
					}
				],
				"name": "Rebalance",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPendingWithdrawal",
						"type": "uint256"
					}
				],
				"name": "RemoveLiquidity",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "burnAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLpAssetBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPendingWithdrawal",
						"type": "uint256"
					}
				],
				"name": "RemoveLiquidityRequest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "sourceChainId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "hashedOrderId",
						"type": "bytes32"
					}
				],
				"name": "RequestCancelOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "signers",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amendment",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "outAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newImbalance",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLpAssetBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newProtocolFeeBalance",
						"type": "uint256"
					}
				],
				"name": "Swap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "excess",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newProtocolFeeBalance",
						"type": "uint256"
					}
				],
				"name": "Sync",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract IOSWAP_ConfigStore",
						"name": "newConfigStore",
						"type": "address"
					}
				],
				"name": "UpdateConfigStore",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract IOSWAP_SideChainTrollRegistry",
						"name": "newTrollRegistry",
						"type": "address"
					}
				],
				"name": "UpdateTrollRegistry",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "signers",
						"type": "uint256[]"
					}
				],
				"name": "VoidOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "newImbalance",
						"type": "int256"
					}
				],
				"name": "WithdrawUnexecutedOrder",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "feeTo",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newProtocolFeeBalance",
						"type": "uint256"
					}
				],
				"name": "WithdrawlTrollFee",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "asset",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "assetDecimalsScale",
				"outputs": [
					{
						"internalType": "int8",
						"name": "",
						"type": "int8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "govTokenOracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "assetTokenOracle",
						"type": "address"
					}
				],
				"name": "assetPriceAgainstGovToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "signatures",
						"type": "bytes[]"
					},
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "canceledByOrderOwner",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "protocolFee",
						"type": "uint256"
					}
				],
				"name": "cancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "configStore",
				"outputs": [
					{
						"internalType": "contract IOSWAP_ConfigStore",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChainId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"name": "getOrders",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "govToken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "canceledByOrderOwner",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "protocolFee",
						"type": "uint256"
					}
				],
				"name": "hashCancelOrderParams",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "sourceChainId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "hashOrder",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amendment",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "protocolFee",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "pair",
						"type": "address[]"
					}
				],
				"name": "hashSwapParams",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					}
				],
				"name": "hashVoidOrderParams",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					}
				],
				"name": "hashWithdrawParams",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "imbalance",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IOSWAP_BridgeVaultTrollRegistry",
						"name": "_vaultRegistry",
						"type": "address"
					}
				],
				"name": "initAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastKnownBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lpAssetBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "newOrder",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "trader",
						"type": "address"
					}
				],
				"name": "newOrderFromRouter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderAmendments",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "peerChain",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "inAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "outToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "minOutAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "orderAmendmentsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderRefunds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orderStatus",
				"outputs": [
					{
						"internalType": "enum IOSWAP_BridgeVault.OrderStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "orders",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "peerChain",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "inAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "outToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "minOutAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ordersLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "length",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pendingWithdrawalAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pendingWithdrawalTimeout",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "protocolFeeBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assetAmount",
						"type": "uint256"
					}
				],
				"name": "rebalancerDeposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "signatures",
						"type": "bytes[]"
					},
					{
						"internalType": "uint256",
						"name": "assetAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					}
				],
				"name": "rebalancerWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "assetAmount",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "lpTokenAmount",
						"type": "uint256"
					}
				],
				"name": "removeLiquidityRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "requestAmendOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "sourceChainId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "requestCancelOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "signatures",
						"type": "bytes[]"
					},
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_orderId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amendment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "protocolFee",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "pair",
						"type": "address[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "peerChain",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "inAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "outToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "minOutAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "expire",
								"type": "uint256"
							}
						],
						"internalType": "struct IOSWAP_BridgeVault.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "swap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "swapOrderStatus",
				"outputs": [
					{
						"internalType": "enum IOSWAP_BridgeVault.OrderStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sync",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalPendingWithdrawal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "trollRegistry",
				"outputs": [
					{
						"internalType": "contract IOSWAP_SideChainTrollRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateConfigStore",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateTrollRegistry",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vaultRegistry",
				"outputs": [
					{
						"internalType": "contract IOSWAP_BridgeVaultTrollRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "signatures",
						"type": "bytes[]"
					},
					{
						"internalType": "bytes32",
						"name": "orderId",
						"type": "bytes32"
					}
				],
				"name": "voidOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "orderId",
						"type": "uint256"
					}
				],
				"name": "withdrawUnexecutedOrder",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawlTrollFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Oswap CrossChain Bridge/contracts/OSWAP_BridgeVault.sol": "OSWAP_BridgeVault"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
			"license": "MIT",
			"urls": [
				"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
				"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
				"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
			"license": "MIT",
			"urls": [
				"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
				"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
				"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
				"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"Oswap CrossChain Bridge/contracts/OSWAP_BridgeVault.sol": {
			"keccak256": "0xd5b069b7de212bc5643c5b593ed4e8c082b105bac884c2838ef0e4f6afb1fbfe",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://d3f524c6d2c31de0e5b3bc04bdaeac113bfb4c4f48ad388c24fac1accb08ef2f",
				"dweb:/ipfs/QmeE2UciFvPbuShAsDpD2XSgP5poYnto7dSFWrsWXERD6Z"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IAuthorization.sol": {
			"keccak256": "0x6b15a11bd4dbcc3e974ce261c0ac4e805ec61b63a6899048cfe32254cab91879",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://0167d98841b00d0300fc47d71048f8f526b5673ae08b981fc809dfc89b588543",
				"dweb:/ipfs/QmRcNhEgqXYe2HB4K6LAWhJkNfbwNVUzbQY5bYYkMVn9ok"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_BridgeVault.sol": {
			"keccak256": "0x3ed9c90b34ebcfb3000a68ab8f377b5b6bda0182a10a19eb47d3db83783d9d77",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://09c5b36da40240ac26a488460996d63c8ac81c935dc4e9237ec432d2efd7cd51",
				"dweb:/ipfs/QmUrnrp8k1NudjNHJ2U5gRV3ubx5GLJ2djDZdPScRvgHyg"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_BridgeVaultTrollRegistry.sol": {
			"keccak256": "0x0885ef4a2cdc3b2d21984ec09f2c968e6995b0b44861ad480b2a0b31c834dc53",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://f2a211df3212c2142731c8e9e8d04c4bb378f449d353d02d6a1974739e53af33",
				"dweb:/ipfs/QmanrF1b7icAPKbemyN2WFoiQY9xZKBCUnazVXGwf2NZK2"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_ConfigStore.sol": {
			"keccak256": "0xeaf8ba51a36e6e8690bed8679f5c5e2acb706bee39d4a2643e96146b9c3d8841",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://c4c0aab633024990a8e9233440cf0690543778f6901e60bd0f8c9d7c57c7c5cd",
				"dweb:/ipfs/QmXb38Vh27XFUEnkpkpkC75BsNHbarvVXjGYU3MMzrtTCe"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_HybridRouter2.sol": {
			"keccak256": "0x60e41f66f1190a595947ac3d691f2e23d12a78f2b63a702ee00b1242b708873b",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://811246471e6bc5ea94ad7522dfa7f2b623cf3ae2f3da6bff75bb2db17056265e",
				"dweb:/ipfs/QmfVguHRNxMvokNhKjdVS1QzYYmoBmVepZinsXVYhLimsR"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_SideChainTrollRegistry.sol": {
			"keccak256": "0xa9e2666b966a78693854afc64f1f446d662f03a4548d802f707b7ece527bb951",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://7e0b12a84de5e35c9a166343fb07e609819e16fb95ad03ac8f4c47a0ad6ce4e6",
				"dweb:/ipfs/QmSEWWE41hho9erVZCoH5k2aKTk9afZbRVWcxDDdPTE7cw"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_SwapPolicy.sol": {
			"keccak256": "0x948acaad231813064a66f08b6feb4e9e1d95588b2099a3a51e14468b89d68460",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://45cfc17764c88ada845e55a994f86c8cce04608b5c19a5efcaab4ca0b5b89a28",
				"dweb:/ipfs/QmUZFrBeds3wBfjXWE2wFZcr4rNSx9JJtaoWJkvhfygNZC"
			]
		},
		"Oswap CrossChain Bridge/contracts/interfaces/IOSWAP_VotingExecutorManager.sol": {
			"keccak256": "0x3c4dc55140d46110096e167792a6e6e75578c0a7085f3f4f34176b3a6cc3157a",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://1671e93d00ad91bb5906184f18f78477f61b24e1bcf65a8ae742586f060c45c1",
				"dweb:/ipfs/Qmbuv1wby89agZTJ4jQnXC9GrEWEdjRhqXNtYfFnrHefWE"
			]
		}
	},
	"version": 1
}