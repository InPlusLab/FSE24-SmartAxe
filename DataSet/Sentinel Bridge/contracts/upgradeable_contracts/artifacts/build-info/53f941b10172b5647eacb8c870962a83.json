{
	"id": "53f941b10172b5647eacb8c870962a83",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol": {
				"content": "pragma solidity 0.4.24;\nimport \"../IBridgeValidators.sol\";\nimport \"../upgradeability/EternalStorage.sol\";\nimport \"../libraries/SafeMath.sol\";\nimport \"./Validatable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\";\n\n\ncontract BasicBridge is EternalStorage, Validatable {\n    using SafeMath for uint256;\n    event GasPriceChanged(uint256 gasPrice);\n    event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations);\n    event DailyLimitChanged(uint256 newLimit);\n\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\n        require(_gasPrice > 0);\n        uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] = _gasPrice;\n        emit GasPriceChanged(_gasPrice);\n    }\n\n    function gasPrice() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))];\n    }\n\n    function setRequiredBlockConfirmations(uint256 _blockConfirmations) public onlyOwner {\n        require(_blockConfirmations > 0);\n        uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] = _blockConfirmations;\n        emit RequiredBlockConfirmationChanged(_blockConfirmations);\n    }\n\n    function requiredBlockConfirmations() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))];\n    }\n\n    function deployedAtBlock() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"deployedAtBlock\"))];\n    }\n\n    function setTotalSpentPerDay(uint256 _day, uint256 _value) internal {\n        uintStorage[keccak256(abi.encodePacked(\"totalSpentPerDay\", _day))] = _value;\n    }\n\n    function totalSpentPerDay(uint256 _day) public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"totalSpentPerDay\", _day))];\n    }\n\n    function minPerTx() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))];\n    }\n\n    function maxPerTx() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))];\n    }\n\n    function setInitialize(bool _status) internal {\n        boolStorage[keccak256(abi.encodePacked(\"isInitialized\"))] = _status;\n    }\n\n    function isInitialized() public view returns(bool) {\n        return boolStorage[keccak256(abi.encodePacked(\"isInitialized\"))];\n    }\n\n    function getCurrentDay() public view returns(uint256) {\n        return now / 1 days;\n    }\n\n    function setDailyLimit(uint256 _dailyLimit) public onlyOwner {\n        uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] = _dailyLimit;\n        emit DailyLimitChanged(_dailyLimit);\n    }\n\n    function dailyLimit() public view returns(uint256) {\n        return uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))];\n    }\n\n    function setMaxPerTx(uint256 _maxPerTx) external onlyOwner {\n        require(_maxPerTx < dailyLimit());\n        uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] = _maxPerTx;\n    }\n\n    function setMinPerTx(uint256 _minPerTx) external onlyOwner {\n        require(_minPerTx < dailyLimit() && _minPerTx < maxPerTx());\n        uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] = _minPerTx;\n    }\n\n    function withinLimit(uint256 _amount) public view returns(bool) {\n        uint256 nextLimit = totalSpentPerDay(getCurrentDay()).add(_amount);\n        return dailyLimit() >= nextLimit && _amount <= maxPerTx() && _amount >= minPerTx();\n    }\n\n    function claimTokens(address _token, address _to) public onlyOwner {\n        require(_to != address(0));\n        if (_token == address(0)) {\n            _to.transfer(address(this).balance);\n            return;\n        }\n\n        ERC20Basic token = ERC20Basic(_token);\n        uint256 balance = token.balanceOf(this);\n        require(token.transfer(_to, balance));\n    }\n\n}\n"
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"content": "pragma solidity ^0.4.24;\n\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * See https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address _who) public view returns (uint256);\n  function transfer(address _to, uint256 _value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n"
			},
			"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol": {
				"content": "pragma solidity 0.4.24;\nimport \"../IBridgeValidators.sol\";\nimport \"../upgradeability/EternalStorage.sol\";\n\n\ncontract Validatable is EternalStorage {\n    function validatorContract() public view returns(IBridgeValidators) {\n        return IBridgeValidators(addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))]);\n    }\n\n    modifier onlyValidator() {\n        require(validatorContract().isValidator(msg.sender));\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(validatorContract().owner() == msg.sender);\n        _;\n    }\n\n    function requiredSignatures() public view returns(uint256) {\n        return validatorContract().requiredSignatures();\n    }\n\n}\n"
			},
			"Sentinel Bridge/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity 0.4.24;\n\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\n  /**\n  * @dev Multiplies two numbers, throws on overflow.\n  */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n    uint256 c = a * b;\n    assert(c / a == b);\n    return c;\n  }\n\n  /**\n  * @dev Integer division of two numbers, truncating the quotient.\n  */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  /**\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n  */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  /**\n  * @dev Adds two numbers, throws on overflow.\n  */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n"
			},
			"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol": {
				"content": "pragma solidity 0.4.24;\n\n\n/**\n * @title EternalStorage\n * @dev This contract holds all the necessary state variables to carry out the storage of any contract.\n */\ncontract EternalStorage {\n\n    mapping(bytes32 => uint256) internal uintStorage;\n    mapping(bytes32 => string) internal stringStorage;\n    mapping(bytes32 => address) internal addressStorage;\n    mapping(bytes32 => bytes) internal bytesStorage;\n    mapping(bytes32 => bool) internal boolStorage;\n    mapping(bytes32 => int256) internal intStorage;\n\n}\n"
			},
			"Sentinel Bridge/contracts/IBridgeValidators.sol": {
				"content": "pragma solidity 0.4.24;\n\n\ninterface IBridgeValidators {\n    function isValidator(address _validator) public view returns(bool);\n    function requiredSignatures() public view returns(uint256);\n    function owner() public view returns(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Sentinel Bridge/contracts/IBridgeValidators.sol": {
				"IBridgeValidators": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "requiredSignatures",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_validator",
									"type": "address"
								}
							],
							"name": "isValidator",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidator(address)": "facd743b",
							"owner()": "8da5cb5b",
							"requiredSignatures()": "8d068043"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Sentinel Bridge/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":116:1138  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":116:1138  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058201e269550ca31502d187c3f9fd169d346e4c63dfa54d72e7c7885c7eeea728bcd0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201e269550ca31502d187c3f9fd169d346e4c63dfa54d72e7c7885c7eeea728bcd0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1e 0x26 SWAP6 POP 0xca BALANCE POP 0x2d XOR PUSH29 0x3F9FD169D346E4C63DFA54D72E7C7885C7EEEA728BCD00290000000000 ",
							"sourceMap": "116:1022:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058201e269550ca31502d187c3f9fd169d346e4c63dfa54d72e7c7885c7eeea728bcd0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1e 0x26 SWAP6 POP 0xca BALANCE POP 0x2d XOR PUSH29 0x3F9FD169D346E4C63DFA54D72E7C7885C7EEEA728BCD00290000000000 ",
							"sourceMap": "116:1022:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 1138,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1138,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201e269550ca31502d187c3f9fd169d346e4c63dfa54d72e7c7885c7eeea728bcd0029",
									".code": [
										{
											"begin": 116,
											"end": 1138,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "ADDRESS"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "EQ"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "MSTORE"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "DUP1"
										},
										{
											"begin": 116,
											"end": 1138,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sentinel Bridge/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sentinel Bridge/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x1da6defc8347d6520a08d09f38e6c78865b8b8a9611f8081903d16aeecbeec60\",\"urls\":[\"bzzr://8d42f39a025e7e5e624e02cc1f00cde69e93004675bb8860170830318ba54a35\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol": {
				"EternalStorage": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "EternalStorage"
					},
					"evm": {
						"assembly": "    /* \"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":163:514  contract EternalStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":163:514  contract EternalStorage {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":163:514  contract EternalStorage {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b087efbd3419d3a186f068cd6246849ec0b7b721f51b62ee76d4c8c1ceb54adb0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820b087efbd3419d3a186f068cd6246849ec0b7b721f51b62ee76d4c8c1ceb54adb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 DUP8 0xef 0xbd CALLVALUE NOT 0xd3 LOG1 DUP7 CREATE PUSH9 0xCD6246849EC0B7B721 0xf5 SHL PUSH3 0xEE76D4 0xc8 0xc1 0xce 0xb5 0x4a 0xdb STOP 0x29 ",
							"sourceMap": "163:351:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;163:351:2;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a72305820b087efbd3419d3a186f068cd6246849ec0b7b721f51b62ee76d4c8c1ceb54adb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 DUP8 0xef 0xbd CALLVALUE NOT 0xd3 LOG1 DUP7 CREATE PUSH9 0xCD6246849EC0B7B721 0xf5 SHL PUSH3 0xEE76D4 0xc8 0xc1 0xce 0xb5 0x4a 0xdb STOP 0x29 ",
							"sourceMap": "163:351:2:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "MSTORE"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "POP"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "DUP1"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "CODECOPY"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 163,
									"end": 514,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b087efbd3419d3a186f068cd6246849ec0b7b721f51b62ee76d4c8c1ceb54adb0029",
									".code": [
										{
											"begin": 163,
											"end": 514,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 163,
											"end": 514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 163,
											"end": 514,
											"name": "MSTORE"
										},
										{
											"begin": 163,
											"end": 514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 163,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 163,
											"end": 514,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"EternalStorage\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":\"EternalStorage\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x20d82231b6d6530069f22085a39d480f9cb38b0ca30d055af515a36de41b23ae\",\"urls\":[\"bzzr://4867c977c55fe83389927f87409abe30779e26c0748c4dbf55ac58ae4dc36d13\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol": {
				"BasicBridge": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "_day",
									"type": "uint256"
								}
							],
							"name": "totalSpentPerDay",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getCurrentDay",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "requiredBlockConfirmations",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "dailyLimit",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_token",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								}
							],
							"name": "claimTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "requiredSignatures",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "validatorContract",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deployedAtBlock",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_minPerTx",
									"type": "uint256"
								}
							],
							"name": "setMinPerTx",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blockConfirmations",
									"type": "uint256"
								}
							],
							"name": "setRequiredBlockConfirmations",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_dailyLimit",
									"type": "uint256"
								}
							],
							"name": "setDailyLimit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "setGasPrice",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_maxPerTx",
									"type": "uint256"
								}
							],
							"name": "setMaxPerTx",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minPerTx",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withinLimit",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maxPerTx",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "gasPrice",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "gasPrice",
									"type": "uint256"
								}
							],
							"name": "GasPriceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "requiredBlockConfirmations",
									"type": "uint256"
								}
							],
							"name": "RequiredBlockConfirmationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "DailyLimitChanged",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":241:3790  contract BasicBridge is EternalStorage, Validatable {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":241:3790  contract BasicBridge is EternalStorage, Validatable {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":241:3790  contract BasicBridge is EternalStorage, Validatable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x2bd0bb05\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e6968b6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f0a9f65\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x67eeba0c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x69ffa08a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8d068043\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x99439089\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a454b99\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa2a6ca27\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xacf5c689\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb20d30a9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbf1fe420\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc6f6f216\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdf25f3f0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xea9f4968\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf968adbe\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfe173b97\n      eq\n      tag_19\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1640:1799  function totalSpentPerDay(uint256 _day) public view returns(uint256) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1640:1799  function totalSpentPerDay(uint256 _day) public view returns(uint256) {... */\n      pop\n      tag_21\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2203:2335  function isInitialized() public view returns(bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2203:2335  function isInitialized() public view returns(bool) {... */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2341:2431  function getCurrentDay() public view returns(uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2341:2431  function getCurrentDay() public view returns(uint256) {... */\n      pop\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1162:1323  function requiredBlockConfirmations() public view returns(uint256) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1162:1323  function requiredBlockConfirmations() public view returns(uint256) {... */\n      pop\n      tag_30\n      jump(tag_31)\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2634:2763  function dailyLimit() public view returns(uint256) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2634:2763  function dailyLimit() public view returns(uint256) {... */\n      pop\n      tag_33\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3418:3787  function claimTokens(address _token, address _to) public onlyOwner {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3418:3787  function claimTokens(address _token, address _to) public onlyOwner {... */\n      pop\n      tag_36\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_37)\n    tag_36:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n      pop\n      tag_39\n      jump(tag_40)\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n      pop\n      tag_42\n      jump(tag_43)\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1329:1468  function deployedAtBlock() public view returns(uint256) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1329:1468  function deployedAtBlock() public view returns(uint256) {... */\n      pop\n      tag_45\n      jump(tag_46)\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2958:3167  function setMinPerTx(uint256 _minPerTx) external onlyOwner {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_47:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2958:3167  function setMinPerTx(uint256 _minPerTx) external onlyOwner {... */\n      pop\n      tag_48\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_49)\n    tag_48:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":852:1156  function setRequiredBlockConfirmations(uint256 _blockConfirmations) public onlyOwner {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":852:1156  function setRequiredBlockConfirmations(uint256 _blockConfirmations) public onlyOwner {... */\n      pop\n      tag_51\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2437:2628  function setDailyLimit(uint256 _dailyLimit) public onlyOwner {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_53:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2437:2628  function setDailyLimit(uint256 _dailyLimit) public onlyOwner {... */\n      pop\n      tag_54\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_55)\n    tag_54:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":504:715  function setGasPrice(uint256 _gasPrice) public onlyOwner {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_56:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":504:715  function setGasPrice(uint256 _gasPrice) public onlyOwner {... */\n      pop\n      tag_57\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2769:2952  function setMaxPerTx(uint256 _maxPerTx) external onlyOwner {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2769:2952  function setMaxPerTx(uint256 _maxPerTx) external onlyOwner {... */\n      pop\n      tag_60\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_61)\n    tag_60:\n      stop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1805:1930  function minPerTx() public view returns(uint256) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1805:1930  function minPerTx() public view returns(uint256) {... */\n      pop\n      tag_63\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3173:3412  function withinLimit(uint256 _amount) public view returns(bool) {... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3173:3412  function withinLimit(uint256 _amount) public view returns(bool) {... */\n      pop\n      tag_66\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1936:2061  function maxPerTx() public view returns(uint256) {... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_68:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1936:2061  function maxPerTx() public view returns(uint256) {... */\n      pop\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":721:846  function gasPrice() public view returns(uint256) {... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_71:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":721:846  function gasPrice() public view returns(uint256) {... */\n      pop\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1640:1799  function totalSpentPerDay(uint256 _day) public view returns(uint256) {... */\n    tag_22:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1700:1707  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1726:1737  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1726:1792  uintStorage[keccak256(abi.encodePacked(\"totalSpentPerDay\", _day))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1785:1789  _day */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1748:1790  abi.encodePacked(\"totalSpentPerDay\", _day) */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x746f74616c5370656e7450657244617900000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x10\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1748:1790  abi.encodePacked(\"totalSpentPerDay\", _day) */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1738:1791  keccak256(abi.encodePacked(\"totalSpentPerDay\", _day)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_75:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_75)\n    tag_76:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1738:1791  keccak256(abi.encodePacked(\"totalSpentPerDay\", _day)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1726:1792  uintStorage[keccak256(abi.encodePacked(\"totalSpentPerDay\", _day))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1719:1792  return uintStorage[keccak256(abi.encodePacked(\"totalSpentPerDay\", _day))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1640:1799  function totalSpentPerDay(uint256 _day) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2203:2335  function isInitialized() public view returns(bool) {... */\n    tag_25:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2248:2252  bool */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2271:2282  boolStorage */\n      0x4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2271:2328  boolStorage[keccak256(abi.encodePacked(\"isInitialized\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2293:2326  abi.encodePacked(\"isInitialized\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6973496e697469616c697a656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0xd\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2293:2326  abi.encodePacked(\"isInitialized\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2283:2327  keccak256(abi.encodePacked(\"isInitialized\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_79:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_79)\n    tag_80:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2283:2327  keccak256(abi.encodePacked(\"isInitialized\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2271:2328  boolStorage[keccak256(abi.encodePacked(\"isInitialized\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2264:2328  return boolStorage[keccak256(abi.encodePacked(\"isInitialized\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2203:2335  function isInitialized() public view returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2341:2431  function getCurrentDay() public view returns(uint256) {... */\n    tag_28:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2386:2393  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2418:2424  1 days */\n      0x15180\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2412:2415  now */\n      timestamp\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2412:2424  now / 1 days */\n      dup2\n      iszero\n      iszero\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      div\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2405:2424  return now / 1 days */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2341:2431  function getCurrentDay() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1162:1323  function requiredBlockConfirmations() public view returns(uint256) {... */\n    tag_31:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1220:1227  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1246:1257  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1246:1316  uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1268:1314  abi.encodePacked(\"requiredBlockConfirmations\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000\n      dup2\n      mstore\n      pop\n      0x1a\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1268:1314  abi.encodePacked(\"requiredBlockConfirmations\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1258:1315  keccak256(abi.encodePacked(\"requiredBlockConfirmations\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_85:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_85)\n    tag_86:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1258:1315  keccak256(abi.encodePacked(\"requiredBlockConfirmations\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1246:1316  uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1239:1316  return uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1162:1323  function requiredBlockConfirmations() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2634:2763  function dailyLimit() public view returns(uint256) {... */\n    tag_34:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2676:2683  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2702:2713  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2702:2756  uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2724:2754  abi.encodePacked(\"dailyLimit\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6461696c794c696d697400000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0xa\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2724:2754  abi.encodePacked(\"dailyLimit\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2714:2755  keccak256(abi.encodePacked(\"dailyLimit\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_89:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_89)\n    tag_90:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2714:2755  keccak256(abi.encodePacked(\"dailyLimit\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2702:2756  uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2695:2756  return uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2634:2763  function dailyLimit() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3418:3787  function claimTokens(address _token, address _to) public onlyOwner {... */\n    tag_37:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3647:3663  ERC20Basic token */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3694:3709  uint256 balance */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_93\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_93:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_96:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_97\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_97:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3518:3519  0 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3503:3520  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3503:3506  _to */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3503:3520  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3495:3521  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_99:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3553:3554  0 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3535:3555  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3535:3541  _token */\n      dup5\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3535:3555  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3531:3637  if (_token == address(0)) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3571:3574  _to */\n      dup3\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3571:3583  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3571:3606  _to.transfer(address(this).balance) */\n      0x8fc\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3592:3596  this */\n      address\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3584:3605  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3571:3606  _to.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3571:3606  _to.transfer(address(this).balance) */\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3620:3627  return; */\n      jump(tag_98)\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3531:3637  if (_token == address(0)) {... */\n    tag_100:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3677:3683  _token */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3647:3684  ERC20Basic token = ERC20Basic(_token) */\n      swap2\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3717  token */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3727  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3728:3732  this */\n      address\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3733  token.balanceOf(this) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3733  token.balanceOf(this) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_103:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3733  token.balanceOf(this) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_104:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3712:3733  token.balanceOf(this) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3694:3733  uint256 balance = token.balanceOf(this) */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3756  token */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3765  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3766:3769  _to */\n      dup5\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3771:3778  balance */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3779  token.transfer(_to, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_105:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3779  token.transfer(_to, balance) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_106:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3779  token.transfer(_to, balance) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3751:3779  token.transfer(_to, balance) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3743:3780  require(token.transfer(_to, balance)) */\n      iszero\n      iszero\n      tag_108\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_108:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":536:537  _ */\n    tag_98:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3418:3787  function claimTokens(address _token, address _to) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n    tag_40:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":600:607  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:645  validatorContract() */\n      tag_110\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:643  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:645  validatorContract() */\n      jump\t// in\n    tag_110:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:664  validatorContract().requiredSignatures */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8d068043\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_112:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":619:666  return validatorContract().requiredSignatures() */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n    tag_43:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":202:219  IBridgeValidators */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:270  addressStorage */\n      0x2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:320  addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":281:318  abi.encodePacked(\"validatorContract\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x76616c696461746f72436f6e7472616374000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x11\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":281:318  abi.encodePacked(\"validatorContract\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":271:319  keccak256(abi.encodePacked(\"validatorContract\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_115:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_115)\n    tag_116:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":271:319  keccak256(abi.encodePacked(\"validatorContract\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:320  addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":231:321  return IBridgeValidators(addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))]) */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1329:1468  function deployedAtBlock() public view returns(uint256) {... */\n    tag_46:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1376:1383  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1402:1413  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1402:1461  uintStorage[keccak256(abi.encodePacked(\"deployedAtBlock\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1424:1459  abi.encodePacked(\"deployedAtBlock\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6465706c6f7965644174426c6f636b0000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0xf\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1424:1459  abi.encodePacked(\"deployedAtBlock\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1414:1460  keccak256(abi.encodePacked(\"deployedAtBlock\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_119:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_119)\n    tag_120:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1414:1460  keccak256(abi.encodePacked(\"deployedAtBlock\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1402:1461  uintStorage[keccak256(abi.encodePacked(\"deployedAtBlock\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1395:1461  return uintStorage[keccak256(abi.encodePacked(\"deployedAtBlock\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1329:1468  function deployedAtBlock() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2958:3167  function setMinPerTx(uint256 _minPerTx) external onlyOwner {... */\n    tag_49:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_123\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_123:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_124:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_125:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_126:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_127\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_127:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3047:3059  dailyLimit() */\n      tag_129\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3047:3057  dailyLimit */\n      tag_34\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3047:3059  dailyLimit() */\n      jump\t// in\n    tag_129:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3035:3044  _minPerTx */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3035:3059  _minPerTx < dailyLimit() */\n      lt\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3035:3085  _minPerTx < dailyLimit() && _minPerTx < maxPerTx() */\n      dup1\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3075:3085  maxPerTx() */\n      tag_131\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3075:3083  maxPerTx */\n      tag_70\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3075:3085  maxPerTx() */\n      jump\t// in\n    tag_131:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3063:3072  _minPerTx */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3063:3085  _minPerTx < maxPerTx() */\n      lt\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3035:3085  _minPerTx < dailyLimit() && _minPerTx < maxPerTx() */\n    tag_130:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3027:3086  require(_minPerTx < dailyLimit() && _minPerTx < maxPerTx()) */\n      iszero\n      iszero\n      tag_132\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_132:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3151:3160  _minPerTx */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3096:3107  uintStorage */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3096:3148  uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3118:3146  abi.encodePacked(\"minPerTx\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6d696e5065725478000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3118:3146  abi.encodePacked(\"minPerTx\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3108:3147  keccak256(abi.encodePacked(\"minPerTx\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_133:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_133)\n    tag_134:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3108:3147  keccak256(abi.encodePacked(\"minPerTx\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3096:3148  uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3096:3160  uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] = _minPerTx */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2958:3167  function setMinPerTx(uint256 _minPerTx) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":852:1156  function setRequiredBlockConfirmations(uint256 _blockConfirmations) public onlyOwner {... */\n    tag_52:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_137\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_137:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_138\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_138:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_139:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_140:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_141\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_141:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":977:978  0 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":955:974  _blockConfirmations */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":955:978  _blockConfirmations > 0 */\n      gt\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":947:979  require(_blockConfirmations > 0) */\n      iszero\n      iszero\n      tag_143\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_143:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1062:1081  _blockConfirmations */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":989:1000  uintStorage */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":989:1059  uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1011:1057  abi.encodePacked(\"requiredBlockConfirmations\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000\n      dup2\n      mstore\n      pop\n      0x1a\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1011:1057  abi.encodePacked(\"requiredBlockConfirmations\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1001:1058  keccak256(abi.encodePacked(\"requiredBlockConfirmations\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_144:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_144)\n    tag_145:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1001:1058  keccak256(abi.encodePacked(\"requiredBlockConfirmations\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":989:1059  uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":989:1081  uintStorage[keccak256(abi.encodePacked(\"requiredBlockConfirmations\"))] = _blockConfirmations */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1096:1149  RequiredBlockConfirmationChanged(_blockConfirmations) */\n      0x4fb76205cd57c896b21511d2114137d8e901b4ccd659e1a0f97d6306795264fb\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1129:1148  _blockConfirmations */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1096:1149  RequiredBlockConfirmationChanged(_blockConfirmations) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":852:1156  function setRequiredBlockConfirmations(uint256 _blockConfirmations) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2437:2628  function setDailyLimit(uint256 _dailyLimit) public onlyOwner {... */\n    tag_55:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_148\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_148:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_149:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_150:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_151:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_152\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_152:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2565:2576  _dailyLimit */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2508:2519  uintStorage */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2508:2562  uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2530:2560  abi.encodePacked(\"dailyLimit\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6461696c794c696d697400000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0xa\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2530:2560  abi.encodePacked(\"dailyLimit\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2520:2561  keccak256(abi.encodePacked(\"dailyLimit\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_154:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_154)\n    tag_155:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2520:2561  keccak256(abi.encodePacked(\"dailyLimit\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2508:2562  uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2508:2576  uintStorage[keccak256(abi.encodePacked(\"dailyLimit\"))] = _dailyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2591:2621  DailyLimitChanged(_dailyLimit) */\n      0xad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2609:2620  _dailyLimit */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2591:2621  DailyLimitChanged(_dailyLimit) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2437:2628  function setDailyLimit(uint256 _dailyLimit) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":504:715  function setGasPrice(uint256 _gasPrice) public onlyOwner {... */\n    tag_58:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_158\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_158:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_159\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_159:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_160:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_161\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_161:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":591:592  0 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":579:588  _gasPrice */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":579:592  _gasPrice > 0 */\n      gt\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":571:593  require(_gasPrice > 0) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":658:667  _gasPrice */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":603:614  uintStorage */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":603:655  uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":625:653  abi.encodePacked(\"gasPrice\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6761735072696365000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":625:653  abi.encodePacked(\"gasPrice\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":615:654  keccak256(abi.encodePacked(\"gasPrice\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_165:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_165)\n    tag_166:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":615:654  keccak256(abi.encodePacked(\"gasPrice\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":603:655  uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":603:667  uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] = _gasPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":682:708  GasPriceChanged(_gasPrice) */\n      0x52264b89e0fceafb26e79fd49ef8a366eb6297483bf4035b027f0c99a7ad512e\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":698:707  _gasPrice */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":682:708  GasPriceChanged(_gasPrice) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":504:715  function setGasPrice(uint256 _gasPrice) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2769:2952  function setMaxPerTx(uint256 _maxPerTx) external onlyOwner {... */\n    tag_61:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":515:525  msg.sender */\n      caller\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      tag_169\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:501  validatorContract */\n      tag_43\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:503  validatorContract() */\n      jump\t// in\n    tag_169:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:509  validatorContract().owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_170:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_171\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_171:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_172:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:511  validatorContract().owner() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":484:525  validatorContract().owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":476:526  require(validatorContract().owner() == msg.sender) */\n      iszero\n      iszero\n      tag_173\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_173:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2858:2870  dailyLimit() */\n      tag_175\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2858:2868  dailyLimit */\n      tag_34\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2858:2870  dailyLimit() */\n      jump\t// in\n    tag_175:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2846:2855  _maxPerTx */\n      dup2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2846:2870  _maxPerTx < dailyLimit() */\n      lt\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2838:2871  require(_maxPerTx < dailyLimit()) */\n      iszero\n      iszero\n      tag_176\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_176:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2936:2945  _maxPerTx */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2881:2892  uintStorage */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2881:2933  uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2903:2931  abi.encodePacked(\"maxPerTx\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6d61785065725478000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2903:2931  abi.encodePacked(\"maxPerTx\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2893:2932  keccak256(abi.encodePacked(\"maxPerTx\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_177:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_177)\n    tag_178:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2893:2932  keccak256(abi.encodePacked(\"maxPerTx\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2881:2933  uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2881:2945  uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] = _maxPerTx */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2769:2952  function setMaxPerTx(uint256 _maxPerTx) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1805:1930  function minPerTx() public view returns(uint256) {... */\n    tag_64:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1845:1852  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1871:1882  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1871:1923  uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1893:1921  abi.encodePacked(\"minPerTx\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6d696e5065725478000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1893:1921  abi.encodePacked(\"minPerTx\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1883:1922  keccak256(abi.encodePacked(\"minPerTx\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_181:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_182\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_181)\n    tag_182:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1883:1922  keccak256(abi.encodePacked(\"minPerTx\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1871:1923  uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1864:1923  return uintStorage[keccak256(abi.encodePacked(\"minPerTx\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1805:1930  function minPerTx() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3173:3412  function withinLimit(uint256 _amount) public view returns(bool) {... */\n    tag_67:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3231:3235  bool */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3247:3264  uint256 nextLimit */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3313  totalSpentPerDay(getCurrentDay()).add(_amount) */\n      tag_185\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3305:3312  _amount */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3300  totalSpentPerDay(getCurrentDay()) */\n      tag_186\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3284:3299  getCurrentDay() */\n      tag_187\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3284:3297  getCurrentDay */\n      tag_28\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3284:3299  getCurrentDay() */\n      jump\t// in\n    tag_187:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3283  totalSpentPerDay */\n      tag_22\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3300  totalSpentPerDay(getCurrentDay()) */\n      jump\t// in\n    tag_186:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3304  totalSpentPerDay(getCurrentDay()).add */\n      tag_188\n      swap1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3267:3313  totalSpentPerDay(getCurrentDay()).add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3247:3313  uint256 nextLimit = totalSpentPerDay(getCurrentDay()).add(_amount) */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3346:3355  nextLimit */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3342  dailyLimit() */\n      tag_189\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3340  dailyLimit */\n      tag_34\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3342  dailyLimit() */\n      jump\t// in\n    tag_189:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3355  dailyLimit() >= nextLimit */\n      lt\n      iszero\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3380  dailyLimit() >= nextLimit && _amount <= maxPerTx() */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3370:3380  maxPerTx() */\n      tag_191\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3370:3378  maxPerTx */\n      tag_70\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3370:3380  maxPerTx() */\n      jump\t// in\n    tag_191:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3359:3366  _amount */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3359:3380  _amount <= maxPerTx() */\n      gt\n      iszero\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3380  dailyLimit() >= nextLimit && _amount <= maxPerTx() */\n    tag_190:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3405  dailyLimit() >= nextLimit && _amount <= maxPerTx() && _amount >= minPerTx() */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3395:3405  minPerTx() */\n      tag_193\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3395:3403  minPerTx */\n      tag_64\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3395:3405  minPerTx() */\n      jump\t// in\n    tag_193:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3384:3391  _amount */\n      dup4\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3384:3405  _amount >= minPerTx() */\n      lt\n      iszero\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3330:3405  dailyLimit() >= nextLimit && _amount <= maxPerTx() && _amount >= minPerTx() */\n    tag_192:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3323:3405  return dailyLimit() >= nextLimit && _amount <= maxPerTx() && _amount >= minPerTx() */\n      swap2\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":3173:3412  function withinLimit(uint256 _amount) public view returns(bool) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1936:2061  function maxPerTx() public view returns(uint256) {... */\n    tag_70:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1976:1983  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2002:2013  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2002:2054  uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2024:2052  abi.encodePacked(\"maxPerTx\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6d61785065725478000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2024:2052  abi.encodePacked(\"maxPerTx\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2014:2053  keccak256(abi.encodePacked(\"maxPerTx\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_195:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_195)\n    tag_196:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2014:2053  keccak256(abi.encodePacked(\"maxPerTx\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":2002:2054  uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1995:2054  return uintStorage[keccak256(abi.encodePacked(\"maxPerTx\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":1936:2061  function maxPerTx() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":721:846  function gasPrice() public view returns(uint256) {... */\n    tag_73:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":761:768  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":787:798  uintStorage */\n      dup1\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":787:839  uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":809:837  abi.encodePacked(\"gasPrice\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x6761735072696365000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x8\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":809:837  abi.encodePacked(\"gasPrice\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":799:838  keccak256(abi.encodePacked(\"gasPrice\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_199:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_199)\n    tag_200:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":799:838  keccak256(abi.encodePacked(\"gasPrice\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":787:839  uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":780:839  return uintStorage[keccak256(abi.encodePacked(\"gasPrice\"))] */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":721:846  function gasPrice() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1007:1136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_188:\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1065:1072  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1080:1089  uint256 c */\n      dup1\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1096:1097  b */\n      dup3\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1092:1093  a */\n      dup5\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1092:1097  a + b */\n      add\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1080:1097  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1115:1116  a */\n      dup4\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1110:1111  c */\n      dup2\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1110:1116  c >= a */\n      lt\n      iszero\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1103:1117  assert(c >= a) */\n      iszero\n      iszero\n      tag_203\n      jumpi\n      invalid\n    tag_203:\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1130:1131  c */\n      dup1\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1123:1131  return c */\n      swap2\n      pop\n        /* \"Sentinel Bridge/contracts/libraries/SafeMath.sol\":1007:1136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e1339ac2d6ec0c3a93ac577af04e053f09d0918d8373b44c741cb7ad21ed5b610029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506119d4806100206000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632bd0bb0514610101578063392e53cd146101425780633e6968b6146101715780633f0a9f651461019c57806367eeba0c146101c757806369ffa08a146101f25780638d0680431461025557806399439089146102805780639a454b99146102d7578063a2a6ca2714610302578063acf5c6891461032f578063b20d30a91461035c578063bf1fe42014610389578063c6f6f216146103b6578063df25f3f0146103e3578063ea9f49681461040e578063f968adbe14610453578063fe173b971461047e575b600080fd5b34801561010d57600080fd5b5061012c600480360381019080803590602001909291905050506104a9565b6040518082815260200191505060405180910390f35b34801561014e57600080fd5b50610157610576565b604051808215151515815260200191505060405180910390f35b34801561017d57600080fd5b50610186610647565b6040518082815260200191505060405180910390f35b3480156101a857600080fd5b506101b161065d565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc610720565b6040518082815260200191505060405180910390f35b3480156101fe57600080fd5b50610253600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e3565b005b34801561026157600080fd5b5061026a610b64565b6040518082815260200191505060405180910390f35b34801561028c57600080fd5b50610295610c11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610cf5565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b5061032d60048036038101908080359060200190929190505050610db8565b005b34801561033b57600080fd5b5061035a60048036038101908080359060200190929190505050610f81565b005b34801561036857600080fd5b5061038760048036038101908080359060200190929190505050611169565b005b34801561039557600080fd5b506103b460048036038101908080359060200190929190505050611342565b005b3480156103c257600080fd5b506103e16004803603810190808035906020019092919050505061152a565b005b3480156103ef57600080fd5b506103f86116e1565b6040518082815260200191505060405180910390f35b34801561041a57600080fd5b50610439600480360381019080803590602001909291905050506117a4565b604051808215151515815260200191505060405180910390f35b34801561045f57600080fd5b50610468611804565b6040518082815260200191505060405180910390f35b34801561048a57600080fd5b506104936118c7565b6040518082815260200191505060405180910390f35b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561052b5780518252602082019150602081019050602083039250610506565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020549050919050565b60006004600060405160200180807f6973496e697469616c697a656400000000000000000000000000000000000000815250600d0190506040516020818303038152906040526040518082805190602001908083835b6020831015156105f157805182526020820191506020810190506020830392506105cc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b6000620151804281151561065757fe5b04905090565b600080600060405160200180807f7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000815250601a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156106d757805182526020820191506020810190506020830392506106b2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080600060405160200180807f6461696c794c696d697400000000000000000000000000000000000000000000815250600a0190506040516020818303038152906040526040518082805190602001908083835b60208310151561079a5780518252602082019150602081019050602083039250610775565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b6000803373ffffffffffffffffffffffffffffffffffffffff16610805610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b505050506040513d602081101561089257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156108c557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610999578273ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610993573d6000803e3d6000fd5b50610b5e565b8391508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a3757600080fd5b505af1158015610a4b573d6000803e3d6000fd5b505050506040513d6020811015610a6157600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050506040513d6020811015610b4157600080fd5b81019080805190602001909291905050501515610b5d57600080fd5b5b50505050565b6000610b6e610c11565b73ffffffffffffffffffffffffffffffffffffffff16638d0680436040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bd157600080fd5b505af1158015610be5573d6000803e3d6000fd5b505050506040513d6020811015610bfb57600080fd5b8101908080519060200190929190505050905090565b60006002600060405160200180807f76616c696461746f72436f6e747261637400000000000000000000000000000081525060110190506040516020818303038152906040526040518082805190602001908083835b602083101515610c8c5780518252602082019150602081019050602083039250610c67565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600060405160200180807f6465706c6f7965644174426c6f636b0000000000000000000000000000000000815250600f0190506040516020818303038152906040526040518082805190602001908083835b602083101515610d6f5780518252602082019150602081019050602083039250610d4a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b3373ffffffffffffffffffffffffffffffffffffffff16610dd7610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050506040513d6020811015610e6457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515610e9757600080fd5b610e9f610720565b81108015610eb35750610eb0611804565b81105b1515610ebe57600080fd5b8060008060405160200180807f6d696e506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b602083101515610f375780518252602082019150602081019050602083039250610f12565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000208190555050565b3373ffffffffffffffffffffffffffffffffffffffff16610fa0610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100357600080fd5b505af1158015611017573d6000803e3d6000fd5b505050506040513d602081101561102d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561106057600080fd5b60008111151561106f57600080fd5b8060008060405160200180807f7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000815250601a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156110e857805182526020820191506020810190506020830392506110c3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507f4fb76205cd57c896b21511d2114137d8e901b4ccd659e1a0f97d6306795264fb816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611188610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b505050506040513d602081101561121557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561124857600080fd5b8060008060405160200180807f6461696c794c696d697400000000000000000000000000000000000000000000815250600a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156112c1578051825260208201915060208101905060208303925061129c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611361610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b505050506040513d60208110156113ee57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561142157600080fd5b60008111151561143057600080fd5b8060008060405160200180807f676173507269636500000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156114a95780518252602082019150602081019050602083039250611484565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507f52264b89e0fceafb26e79fd49ef8a366eb6297483bf4035b027f0c99a7ad512e816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611549610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b505050506040513d60208110156115d657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561160957600080fd5b611611610720565b8110151561161e57600080fd5b8060008060405160200180807f6d6178506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156116975780518252602082019150602081019050602083039250611672565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000208190555050565b600080600060405160200180807f6d696e506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b60208310151561175b5780518252602082019150602081019050602083039250611736565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b6000806117c9836117bb6117b6610647565b6104a9565b61198a90919063ffffffff16565b9050806117d4610720565b101580156117e957506117e5611804565b8311155b80156117fc57506117f86116e1565b8310155b915050919050565b600080600060405160200180807f6d6178506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b60208310151561187e5780518252602082019150602081019050602083039250611859565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080600060405160200180807f676173507269636500000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b602083101515611941578051825260208201915060208101905060208303925061191c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080828401905083811015151561199e57fe5b80915050929150505600a165627a7a72305820e1339ac2d6ec0c3a93ac577af04e053f09d0918d8373b44c741cb7ad21ed5b610029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFC JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2BD0BB05 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x3E6968B6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F0A9F65 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x69FFA08A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x9A454B99 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xA2A6CA27 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xACF5C689 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xB20D30A9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xBF1FE420 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xC6F6F216 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDF25F3F0 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xEA9F4968 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF968ADBE EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xFE173B97 EQ PUSH2 0x47E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1169 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x152A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x468 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x746F74616C5370656E7450657244617900000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x52B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6973496E697469616C697A656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x5F1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x657 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000 DUP2 MSTORE POP PUSH1 0x1A ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x6D7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6461696C794C696D697400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x79A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x805 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x999 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x993 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB5E JUMP JUMPDEST DUP4 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8D068043 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x76616C696461746F72436F6E7472616374000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xC8C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6465706C6F7965644174426C6F636B0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xF ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xD6F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD7 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9F PUSH2 0x720 JUMP JUMPDEST DUP2 LT DUP1 ISZERO PUSH2 0xEB3 JUMPI POP PUSH2 0xEB0 PUSH2 0x1804 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D696E5065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xF37 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1017 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000 DUP2 MSTORE POP PUSH1 0x1A ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x10E8 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x4FB76205CD57C896B21511D2114137D8E901B4CCD659E1A0F97D6306795264FB DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1188 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6461696C794C696D697400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x12C1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x129C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xAD4123AE17C414D9C6D2FEC478B402E6B01856CC250FD01FBFD252FDA0089D3C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1361 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x1430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6761735072696365000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x14A9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x52264B89E0FCEAFB26E79FD49EF8A366EB6297483BF4035B027F0C99A7AD512E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1549 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1611 PUSH2 0x720 JUMP JUMPDEST DUP2 LT ISZERO ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D61785065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1697 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D696E5065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x175B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17C9 DUP4 PUSH2 0x17BB PUSH2 0x17B6 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x198A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x17D4 PUSH2 0x720 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x17E9 JUMPI POP PUSH2 0x17E5 PUSH2 0x1804 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17FC JUMPI POP PUSH2 0x17F8 PUSH2 0x16E1 JUMP JUMPDEST DUP4 LT ISZERO JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D61785065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x187E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6761735072696365000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1941 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x191C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x199E JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 CALLER SWAP11 0xc2 0xd6 0xec 0xc GASPRICE SWAP4 0xac JUMPI PUSH27 0xF04E053F09D0918D8373B44C741CB7AD21ED5B6100290000000000 ",
							"sourceMap": "241:3549:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;241:3549:3;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632bd0bb0514610101578063392e53cd146101425780633e6968b6146101715780633f0a9f651461019c57806367eeba0c146101c757806369ffa08a146101f25780638d0680431461025557806399439089146102805780639a454b99146102d7578063a2a6ca2714610302578063acf5c6891461032f578063b20d30a91461035c578063bf1fe42014610389578063c6f6f216146103b6578063df25f3f0146103e3578063ea9f49681461040e578063f968adbe14610453578063fe173b971461047e575b600080fd5b34801561010d57600080fd5b5061012c600480360381019080803590602001909291905050506104a9565b6040518082815260200191505060405180910390f35b34801561014e57600080fd5b50610157610576565b604051808215151515815260200191505060405180910390f35b34801561017d57600080fd5b50610186610647565b6040518082815260200191505060405180910390f35b3480156101a857600080fd5b506101b161065d565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc610720565b6040518082815260200191505060405180910390f35b3480156101fe57600080fd5b50610253600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e3565b005b34801561026157600080fd5b5061026a610b64565b6040518082815260200191505060405180910390f35b34801561028c57600080fd5b50610295610c11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e357600080fd5b506102ec610cf5565b6040518082815260200191505060405180910390f35b34801561030e57600080fd5b5061032d60048036038101908080359060200190929190505050610db8565b005b34801561033b57600080fd5b5061035a60048036038101908080359060200190929190505050610f81565b005b34801561036857600080fd5b5061038760048036038101908080359060200190929190505050611169565b005b34801561039557600080fd5b506103b460048036038101908080359060200190929190505050611342565b005b3480156103c257600080fd5b506103e16004803603810190808035906020019092919050505061152a565b005b3480156103ef57600080fd5b506103f86116e1565b6040518082815260200191505060405180910390f35b34801561041a57600080fd5b50610439600480360381019080803590602001909291905050506117a4565b604051808215151515815260200191505060405180910390f35b34801561045f57600080fd5b50610468611804565b6040518082815260200191505060405180910390f35b34801561048a57600080fd5b506104936118c7565b6040518082815260200191505060405180910390f35b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310151561052b5780518252602082019150602081019050602083039250610506565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020549050919050565b60006004600060405160200180807f6973496e697469616c697a656400000000000000000000000000000000000000815250600d0190506040516020818303038152906040526040518082805190602001908083835b6020831015156105f157805182526020820191506020810190506020830392506105cc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff16905090565b6000620151804281151561065757fe5b04905090565b600080600060405160200180807f7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000815250601a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156106d757805182526020820191506020810190506020830392506106b2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080600060405160200180807f6461696c794c696d697400000000000000000000000000000000000000000000815250600a0190506040516020818303038152906040526040518082805190602001908083835b60208310151561079a5780518252602082019150602081019050602083039250610775565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b6000803373ffffffffffffffffffffffffffffffffffffffff16610805610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b505050506040513d602081101561089257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156108c557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610999578273ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610993573d6000803e3d6000fd5b50610b5e565b8391508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610a3757600080fd5b505af1158015610a4b573d6000803e3d6000fd5b505050506040513d6020811015610a6157600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b1757600080fd5b505af1158015610b2b573d6000803e3d6000fd5b505050506040513d6020811015610b4157600080fd5b81019080805190602001909291905050501515610b5d57600080fd5b5b50505050565b6000610b6e610c11565b73ffffffffffffffffffffffffffffffffffffffff16638d0680436040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bd157600080fd5b505af1158015610be5573d6000803e3d6000fd5b505050506040513d6020811015610bfb57600080fd5b8101908080519060200190929190505050905090565b60006002600060405160200180807f76616c696461746f72436f6e747261637400000000000000000000000000000081525060110190506040516020818303038152906040526040518082805190602001908083835b602083101515610c8c5780518252602082019150602081019050602083039250610c67565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600060405160200180807f6465706c6f7965644174426c6f636b0000000000000000000000000000000000815250600f0190506040516020818303038152906040526040518082805190602001908083835b602083101515610d6f5780518252602082019150602081019050602083039250610d4a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b3373ffffffffffffffffffffffffffffffffffffffff16610dd7610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e3a57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b505050506040513d6020811015610e6457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515610e9757600080fd5b610e9f610720565b81108015610eb35750610eb0611804565b81105b1515610ebe57600080fd5b8060008060405160200180807f6d696e506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b602083101515610f375780518252602082019150602081019050602083039250610f12565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000208190555050565b3373ffffffffffffffffffffffffffffffffffffffff16610fa0610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100357600080fd5b505af1158015611017573d6000803e3d6000fd5b505050506040513d602081101561102d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561106057600080fd5b60008111151561106f57600080fd5b8060008060405160200180807f7265717569726564426c6f636b436f6e6669726d6174696f6e73000000000000815250601a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156110e857805182526020820191506020810190506020830392506110c3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507f4fb76205cd57c896b21511d2114137d8e901b4ccd659e1a0f97d6306795264fb816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611188610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b505050506040513d602081101561121557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561124857600080fd5b8060008060405160200180807f6461696c794c696d697400000000000000000000000000000000000000000000815250600a0190506040516020818303038152906040526040518082805190602001908083835b6020831015156112c1578051825260208201915060208101905060208303925061129c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611361610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b505050506040513d60208110156113ee57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561142157600080fd5b60008111151561143057600080fd5b8060008060405160200180807f676173507269636500000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156114a95780518252602082019150602081019050602083039250611484565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600019168152602001908152602001600020819055507f52264b89e0fceafb26e79fd49ef8a366eb6297483bf4035b027f0c99a7ad512e816040518082815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16611549610c11565b73ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b505050506040513d60208110156115d657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561160957600080fd5b611611610720565b8110151561161e57600080fd5b8060008060405160200180807f6d6178506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b6020831015156116975780518252602082019150602081019050602083039250611672565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000208190555050565b600080600060405160200180807f6d696e506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b60208310151561175b5780518252602082019150602081019050602083039250611736565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b6000806117c9836117bb6117b6610647565b6104a9565b61198a90919063ffffffff16565b9050806117d4610720565b101580156117e957506117e5611804565b8311155b80156117fc57506117f86116e1565b8310155b915050919050565b600080600060405160200180807f6d6178506572547800000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b60208310151561187e5780518252602082019150602081019050602083039250611859565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080600060405160200180807f676173507269636500000000000000000000000000000000000000000000000081525060080190506040516020818303038152906040526040518082805190602001908083835b602083101515611941578051825260208201915060208101905060208303925061191c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002054905090565b600080828401905083811015151561199e57fe5b80915050929150505600a165627a7a72305820e1339ac2d6ec0c3a93ac577af04e053f09d0918d8373b44c741cb7ad21ed5b610029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFC JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2BD0BB05 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x3E6968B6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F0A9F65 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x69FFA08A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x8D068043 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x9A454B99 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xA2A6CA27 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xACF5C689 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xB20D30A9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xBF1FE420 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xC6F6F216 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xDF25F3F0 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xEA9F4968 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF968ADBE EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xFE173B97 EQ PUSH2 0x47E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1169 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1342 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x152A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x468 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x493 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x746F74616C5370656E7450657244617900000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x10 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x52B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6973496E697469616C697A656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x5F1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP DUP2 ISZERO ISZERO PUSH2 0x657 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000 DUP2 MSTORE POP PUSH1 0x1A ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x6D7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6461696C794C696D697400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x79A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x775 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x805 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x999 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x993 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xB5E JUMP JUMPDEST DUP4 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8D068043 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x76616C696461746F72436F6E7472616374000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xC8C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6465706C6F7965644174426C6F636B0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xF ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xD6F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD7 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9F PUSH2 0x720 JUMP JUMPDEST DUP2 LT DUP1 ISZERO PUSH2 0xEB3 JUMPI POP PUSH2 0xEB0 PUSH2 0x1804 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D696E5065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xF37 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1017 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000 DUP2 MSTORE POP PUSH1 0x1A ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x10E8 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x4FB76205CD57C896B21511D2114137D8E901B4CCD659E1A0F97D6306795264FB DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1188 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6461696C794C696D697400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xA ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x12C1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x129C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xAD4123AE17C414D9C6D2FEC478B402E6B01856CC250FD01FBFD252FDA0089D3C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1361 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT ISZERO ISZERO PUSH2 0x1430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6761735072696365000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x14A9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x52264B89E0FCEAFB26E79FD49EF8A366EB6297483BF4035B027F0C99A7AD512E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1549 PUSH2 0xC11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1611 PUSH2 0x720 JUMP JUMPDEST DUP2 LT ISZERO ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D61785065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1697 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D696E5065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x175B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17C9 DUP4 PUSH2 0x17BB PUSH2 0x17B6 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x198A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x17D4 PUSH2 0x720 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x17E9 JUMPI POP PUSH2 0x17E5 PUSH2 0x1804 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17FC JUMPI POP PUSH2 0x17F8 PUSH2 0x16E1 JUMP JUMPDEST DUP4 LT ISZERO JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6D61785065725478000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x187E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x6761735072696365000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1941 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x191C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x199E JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 CALLER SWAP11 0xc2 0xd6 0xec 0xc GASPRICE SWAP4 0xac JUMPI PUSH27 0xF04E053F09D0918D8373B44C741CB7AD21ED5B6100290000000000 ",
							"sourceMap": "241:3549:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1640:159:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2203:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2341:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2341:90:3;;;;;;;;;;;;;;;;;;;;;;;1162:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1162:161:3;;;;;;;;;;;;;;;;;;;;;;;2634:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2634:129:3;;;;;;;;;;;;;;;;;;;;;;;3418:369;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3418:369:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:123:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:123:4;;;;;;;;;;;;;;;;;;;;;;;153:175;;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:175:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:139:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1329:139:3;;;;;;;;;;;;;;;;;;;;;;;2958:209;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2958:209:3;;;;;;;;;;;;;;;;;;;;;;;;;;852:304;;8:9:-1;5:2;;;30:1;27;20:12;5:2;852:304:3;;;;;;;;;;;;;;;;;;;;;;;;;;2437:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2437:191:3;;;;;;;;;;;;;;;;;;;;;;;;;;504:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;504:211:3;;;;;;;;;;;;;;;;;;;;;;;;;;2769:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:183:3;;;;;;;;;;;;;;;;;;;;;;;;;;1805:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1805:125:3;;;;;;;;;;;;;;;;;;;;;;;3173:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3173:239:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1936:125:3;;;;;;;;;;;;;;;;;;;;;;;721;;8:9:-1;5:2;;;30:1;27;20:12;5:2;721:125:3;;;;;;;;;;;;;;;;;;;;;;;1640:159;1700:7;1726:11;:66;1785:4;1748:42;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1748:42:3;;;1738:53;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1738:53:3;;;;;;;;;;;;;;;;1726:66;;;;;;;;;;;;;;;;;;1719:73;;1640:159;;;:::o;2203:132::-;2248:4;2271:11;:57;2293:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2293:33:3;;;2283:44;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2283:44:3;;;;;;;;;;;;;;;;2271:57;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:64;;2203:132;:::o;2341:90::-;2386:7;2418:6;2412:3;:12;;;;;;;;2405:19;;2341:90;:::o;1162:161::-;1220:7;1246:11;:70;1268:46;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1268:46:3;;;1258:57;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1258:57:3;;;;;;;;;;;;;;;;1246:70;;;;;;;;;;;;;;;;;;1239:77;;1162:161;:::o;2634:129::-;2676:7;2702:11;:54;2724:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2724:30:3;;;2714:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2714:41:3;;;;;;;;;;;;;;;;2702:54;;;;;;;;;;;;;;;;;;2695:61;;2634:129;:::o;3418:369::-;3647:16;3694:15;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;3518:1:3;3503:17;;:3;:17;;;;3495:26;;;;;;;;3553:1;3535:20;;:6;:20;;;3531:106;;;3571:3;:12;;:35;3592:4;3584:21;;;3571:35;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3571:35:3;3620:7;;3531:106;3677:6;3647:37;;3712:5;:15;;;3728:4;3712:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3712:21:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3712:21:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3712:21:3;;;;;;;;;;;;;;;;3694:39;;3751:5;:14;;;3766:3;3771:7;3751:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3751:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3751:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3751:28:3;;;;;;;;;;;;;;;;3743:37;;;;;;;;536:1:4;3418:369:3;;;;:::o;550:123:4:-;600:7;626:19;:17;:19::i;:::-;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;626:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;626:40:4;;;;;;;;;;;;;;;;619:47;;550:123;:::o;153:175::-;202:17;256:14;:64;281:37;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;281:37:4;;;271:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;271:48:4;;;;;;;;;;;;;;;;256:64;;;;;;;;;;;;;;;;;;;;;;;;;;;231:90;;153:175;:::o;1329:139:3:-;1376:7;1402:11;:59;1424:35;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1424:35:3;;;1414:46;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1414:46:3;;;;;;;;;;;;;;;;1402:59;;;;;;;;;;;;;;;;;;1395:66;;1329:139;:::o;2958:209::-;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;3047:12:3;:10;:12::i;:::-;3035:9;:24;:50;;;;;3075:10;:8;:10::i;:::-;3063:9;:22;3035:50;3027:59;;;;;;;;3151:9;3096:11;:52;3118:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3118:28:3;;;3108:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3108:39:3;;;;;;;;;;;;;;;;3096:52;;;;;;;;;;;;;;;;;:64;;;;2958:209;:::o;852:304::-;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;977:1:3;955:19;:23;947:32;;;;;;;;1062:19;989:11;:70;1011:46;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1011:46:3;;;1001:57;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1001:57:3;;;;;;;;;;;;;;;;989:70;;;;;;;;;;;;;;;;;:92;;;;1096:53;1129:19;1096:53;;;;;;;;;;;;;;;;;;852:304;:::o;2437:191::-;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;2565:11:3;2508;:54;2530:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2530:30:3;;;2520:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2520:41:3;;;;;;;;;;;;;;;;2508:54;;;;;;;;;;;;;;;;;:68;;;;2591:30;2609:11;2591:30;;;;;;;;;;;;;;;;;;2437:191;:::o;504:211::-;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;591:1:3;579:9;:13;571:22;;;;;;;;658:9;603:11;:52;625:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;625:28:3;;;615:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;615:39:3;;;;;;;;;;;;;;;;603:52;;;;;;;;;;;;;;;;;:64;;;;682:26;698:9;682:26;;;;;;;;;;;;;;;;;;504:211;:::o;2769:183::-;515:10:4;484:41;;:19;:17;:19::i;:::-;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:27:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;484:27:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;484:27:4;;;;;;;;;;;;;;;;:41;;;476:50;;;;;;;;2858:12:3;:10;:12::i;:::-;2846:9;:24;2838:33;;;;;;;;2936:9;2881:11;:52;2903:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2903:28:3;;;2893:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2893:39:3;;;;;;;;;;;;;;;;2881:52;;;;;;;;;;;;;;;;;:64;;;;2769:183;:::o;1805:125::-;1845:7;1871:11;:52;1893:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1893:28:3;;;1883:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1883:39:3;;;;;;;;;;;;;;;;1871:52;;;;;;;;;;;;;;;;;;1864:59;;1805:125;:::o;3173:239::-;3231:4;3247:17;3267:46;3305:7;3267:33;3284:15;:13;:15::i;:::-;3267:16;:33::i;:::-;:37;;:46;;;;:::i;:::-;3247:66;;3346:9;3330:12;:10;:12::i;:::-;:25;;:50;;;;;3370:10;:8;:10::i;:::-;3359:7;:21;;3330:50;:75;;;;;3395:10;:8;:10::i;:::-;3384:7;:21;;3330:75;3323:82;;3173:239;;;;:::o;1936:125::-;1976:7;2002:11;:52;2024:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2024:28:3;;;2014:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2014:39:3;;;;;;;;;;;;;;;;2002:52;;;;;;;;;;;;;;;;;;1995:59;;1936:125;:::o;721:::-;761:7;787:11;:52;809:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;809:28:3;;;799:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;799:39:3;;;;;;;;;;;;;;;;787:52;;;;;;;;;;;;;;;;;;780:59;;721:125;:::o;1007:129:1:-;1065:7;1080:9;1096:1;1092;:5;1080:17;;1115:1;1110;:6;;1103:14;;;;;;1130:1;1123:8;;1007:129;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1322400",
								"executionCost": "1376",
								"totalCost": "1323776"
							},
							"external": {
								"claimTokens(address,address)": "infinite",
								"dailyLimit()": "935",
								"deployedAtBlock()": "1023",
								"gasPrice()": "1221",
								"getCurrentDay()": "276",
								"isInitialized()": "917",
								"maxPerTx()": "1199",
								"minPerTx()": "1155",
								"requiredBlockConfirmations()": "913",
								"requiredSignatures()": "infinite",
								"setDailyLimit(uint256)": "infinite",
								"setGasPrice(uint256)": "infinite",
								"setMaxPerTx(uint256)": "infinite",
								"setMinPerTx(uint256)": "infinite",
								"setRequiredBlockConfirmations(uint256)": "infinite",
								"totalSpentPerDay(uint256)": "infinite",
								"validatorContract()": "1049",
								"withinLimit(uint256)": "infinite"
							},
							"internal": {
								"setInitialize(bool)": "infinite",
								"setTotalSpentPerDay(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "MSTORE"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "POP"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "DUP1"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "CODECOPY"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3790,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e1339ac2d6ec0c3a93ac577af04e053f09d0918d8373b44c741cb7ad21ed5b610029",
									".code": [
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "LT"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DIV"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "2BD0BB05"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "392E53CD"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "3E6968B6"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "3F0A9F65"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "67EEBA0C"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "69FFA08A"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "8D068043"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "99439089"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "9A454B99"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "A2A6CA27"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "ACF5C689"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "B20D30A9"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "BF1FE420"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "C6F6F216"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "DF25F3F0"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "EA9F4968"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "F968ADBE"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "FE173B97"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 3790,
											"name": "REVERT"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SUB"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "ADD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "ADD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP3"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "JUMP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "MLOAD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP3"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "MSTORE"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "ADD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "MLOAD"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SUB"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "RETURN"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "JUMPDEST"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "JUMP"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "JUMPDEST"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "MLOAD"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "DUP1"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "DUP3"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "DUP2"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "MSTORE"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "ADD"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "SWAP2"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "MLOAD"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "DUP1"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "SWAP2"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "SUB"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "RETURN"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "JUMP"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "DUP3"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "DUP2"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "MSTORE"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "ADD"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "SWAP2"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "SWAP2"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "SUB"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "RETURN"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "JUMP"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "DUP3"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "MSTORE"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "ADD"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "SUB"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "RETURN"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "JUMPDEST"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "POP"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "JUMP"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "JUMPDEST"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "MLOAD"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "DUP1"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "DUP3"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "MSTORE"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "ADD"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "SWAP2"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "POP"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "POP"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "MLOAD"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "DUP1"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "SWAP2"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "SUB"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "RETURN"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "JUMPDEST"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SUB"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "DUP2"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "AND"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP3"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP2"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "AND"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP3"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP2"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "JUMP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "JUMPDEST"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "STOP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP3"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MSTORE"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SUB"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "RETURN"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP3"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "AND"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "AND"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MSTORE"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "ADD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SUB"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "RETURN"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "JUMPDEST"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "JUMP"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "JUMPDEST"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "MLOAD"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "DUP3"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "MSTORE"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "ADD"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "SWAP2"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "MLOAD"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "SWAP2"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "SUB"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "RETURN"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "JUMPDEST"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "DUP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SUB"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "DUP2"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "DUP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "DUP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "ADD"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP3"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP2"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "SWAP1"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "JUMP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "JUMPDEST"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "STOP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SUB"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "DUP2"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "ADD"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "ADD"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP3"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP2"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "SWAP1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "STOP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "JUMPDEST"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SUB"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "DUP2"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "ADD"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "ADD"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP3"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP2"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "JUMP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "JUMPDEST"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "STOP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SUB"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "ADD"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP3"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "JUMP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "STOP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "JUMPDEST"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "DUP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SUB"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "DUP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "DUP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP3"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP2"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "JUMP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "JUMPDEST"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "STOP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "JUMPDEST"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "POP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "JUMP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "JUMPDEST"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "MLOAD"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "DUP1"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "DUP3"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "DUP2"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "MSTORE"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "ADD"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "SWAP2"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "POP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "POP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "MLOAD"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "DUP1"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "SWAP2"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "SUB"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "RETURN"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SUB"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ADD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ADD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP3"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "JUMP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "MLOAD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP3"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ISZERO"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ISZERO"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ISZERO"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ISZERO"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "MSTORE"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "ADD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "MLOAD"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SUB"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "RETURN"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "POP"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "JUMP"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "MLOAD"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "DUP1"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "DUP3"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "DUP2"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "MSTORE"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "ADD"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "SWAP2"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "POP"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "POP"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "MLOAD"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "DUP1"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "SWAP2"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "SUB"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "SWAP1"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "RETURN"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "JUMP"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "JUMPDEST"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "DUP3"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "DUP2"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "MSTORE"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "ADD"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "MLOAD"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "SWAP2"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "SUB"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "RETURN"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1700,
											"end": 1707,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1737,
											"name": "DUP1"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "DUP4"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "MLOAD"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "746F74616C5370656E7450657244617900000000000000000000000000000000"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP2"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "MSTORE"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP3"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "DUP2"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "MSTORE"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "MSTORE"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MLOAD"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP3"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MLOAD"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "ADD"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP4"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "ADD"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP2"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "POP"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "MLOAD"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "DUP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP2"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SUB"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "SWAP1"
										},
										{
											"begin": 1738,
											"end": 1791,
											"name": "KECCAK256"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "NOT"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "AND"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "NOT"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "AND"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "DUP2"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "MSTORE"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "ADD"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "DUP2"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "MSTORE"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "ADD"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "KECCAK256"
										},
										{
											"begin": 1726,
											"end": 1792,
											"name": "SLOAD"
										},
										{
											"begin": 1719,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1719,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 1799,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "JUMPDEST"
										},
										{
											"begin": 2248,
											"end": 2252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "MLOAD"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "ADD"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "DUP1"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "DUP1"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "6973496E697469616C697A656400000000000000000000000000000000000000"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "DUP2"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "MSTORE"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "POP"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "ADD"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "SWAP1"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "POP"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "SWAP1"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "MSTORE"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "MLOAD"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP3"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "MLOAD"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP4"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "MLOAD"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SUB"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2327,
											"name": "KECCAK256"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "NOT"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "AND"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "NOT"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "AND"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "DUP2"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "MSTORE"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "ADD"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "DUP2"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "MSTORE"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "ADD"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "KECCAK256"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "SLOAD"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "EXP"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "DIV"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2271,
											"end": 2328,
											"name": "AND"
										},
										{
											"begin": 2264,
											"end": 2328,
											"name": "SWAP1"
										},
										{
											"begin": 2264,
											"end": 2328,
											"name": "POP"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2203,
											"end": 2335,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 2386,
											"end": 2393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "PUSH",
											"value": "15180"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "DUP2"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "ISZERO"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "ISZERO"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPI"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "INVALID"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "JUMPDEST"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "DIV"
										},
										{
											"begin": 2405,
											"end": 2424,
											"name": "SWAP1"
										},
										{
											"begin": 2405,
											"end": 2424,
											"name": "POP"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 2341,
											"end": 2431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "MLOAD"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "ADD"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "DUP2"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "MSTORE"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "ADD"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1314,
											"name": "MSTORE"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "MLOAD"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP3"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "MLOAD"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "ADD"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP4"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "ADD"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP2"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "MLOAD"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "DUP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP2"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SUB"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "SWAP1"
										},
										{
											"begin": 1258,
											"end": 1315,
											"name": "KECCAK256"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "NOT"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "AND"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "NOT"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "AND"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "MSTORE"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "ADD"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "MSTORE"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "ADD"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "KECCAK256"
										},
										{
											"begin": 1246,
											"end": 1316,
											"name": "SLOAD"
										},
										{
											"begin": 1239,
											"end": 1316,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1316,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "JUMPDEST"
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "DUP1"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MLOAD"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "ADD"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "DUP1"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "DUP1"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "6461696C794C696D697400000000000000000000000000000000000000000000"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "DUP2"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "POP"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "ADD"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "POP"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "SWAP1"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MSTORE"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "MLOAD"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP3"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "MLOAD"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "ADD"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP4"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "ADD"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP2"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "MLOAD"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "DUP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP2"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SUB"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2714,
											"end": 2755,
											"name": "KECCAK256"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "NOT"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "AND"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "NOT"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "AND"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MSTORE"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ADD"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SWAP1"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "DUP2"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "MSTORE"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "ADD"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "KECCAK256"
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "SLOAD"
										},
										{
											"begin": 2695,
											"end": 2756,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2756,
											"name": "POP"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2634,
											"end": 2763,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "JUMPDEST"
										},
										{
											"begin": 3647,
											"end": 3663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3709,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "AND"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP4"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "AND"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "EQ"
										},
										{
											"begin": 3503,
											"end": 3520,
											"name": "ISZERO"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "ISZERO"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "JUMPI"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "DUP1"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "REVERT"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "JUMPDEST"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3555,
											"name": "AND"
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "DUP5"
										},
										{
											"begin": 3535,
											"end": 3555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3555,
											"name": "AND"
										},
										{
											"begin": 3535,
											"end": 3555,
											"name": "EQ"
										},
										{
											"begin": 3531,
											"end": 3637,
											"name": "ISZERO"
										},
										{
											"begin": 3531,
											"end": 3637,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3637,
											"name": "JUMPI"
										},
										{
											"begin": 3571,
											"end": 3574,
											"name": "DUP3"
										},
										{
											"begin": 3571,
											"end": 3583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3583,
											"name": "AND"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3592,
											"end": 3596,
											"name": "ADDRESS"
										},
										{
											"begin": 3584,
											"end": 3605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3605,
											"name": "AND"
										},
										{
											"begin": 3584,
											"end": 3605,
											"name": "BALANCE"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "SWAP1"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP2"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "ISZERO"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "MUL"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "SWAP1"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "MLOAD"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "MLOAD"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP1"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP4"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "SUB"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP2"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP6"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP9"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "DUP9"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "CALL"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "SWAP4"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3571,
											"end": 3606,
											"name": "POP"
										},
										{
											"begin": 3620,
											"end": 3627,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3620,
											"end": 3627,
											"name": "JUMP"
										},
										{
											"begin": 3531,
											"end": 3637,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3531,
											"end": 3637,
											"name": "JUMPDEST"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP4"
										},
										{
											"begin": 3647,
											"end": 3684,
											"name": "SWAP2"
										},
										{
											"begin": 3647,
											"end": 3684,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3717,
											"name": "DUP2"
										},
										{
											"begin": 3712,
											"end": 3727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3727,
											"name": "AND"
										},
										{
											"begin": 3712,
											"end": 3727,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3728,
											"end": 3732,
											"name": "ADDRESS"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MLOAD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP3"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "AND"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MUL"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MSTORE"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ADD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP3"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "AND"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "AND"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MSTORE"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ADD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MLOAD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP4"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SUB"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP8"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "GAS"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "CALL"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MLOAD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ADD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "DUP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "MLOAD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "ADD"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP3"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP2"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "SWAP1"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3712,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3694,
											"end": 3733,
											"name": "SWAP1"
										},
										{
											"begin": 3694,
											"end": 3733,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "AND"
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP5"
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "AND"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MUL"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "AND"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "AND"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP3"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MSTORE"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP3"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP4"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SUB"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP8"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "GAS"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "CALL"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "DUP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "MLOAD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "ADD"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP3"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP2"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "SWAP1"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3751,
											"end": 3779,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "ISZERO"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "ISZERO"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "JUMPI"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "REVERT"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 3743,
											"end": 3780,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "POP"
										},
										{
											"begin": 3418,
											"end": 3787,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 600,
											"end": 607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 626,
											"end": 643,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"value": "8D068043"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MUL"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP8"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "GAS"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "CALL"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 619,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 202,
											"end": 219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 270,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "76616C696461746F72436F6E7472616374000000000000000000000000000000"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP4"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "KECCAK256"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "KECCAK256"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SLOAD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "EXP"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DIV"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "JUMPDEST"
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "6465706C6F7965644174426C6F636B0000000000000000000000000000000000"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "MLOAD"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP3"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "MLOAD"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP4"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "MLOAD"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1460,
											"name": "KECCAK256"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "NOT"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "NOT"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "AND"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "DUP2"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "MSTORE"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "ADD"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "DUP2"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "MSTORE"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "ADD"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "KECCAK256"
										},
										{
											"begin": 1402,
											"end": 1461,
											"name": "SLOAD"
										},
										{
											"begin": 1395,
											"end": 1461,
											"name": "SWAP1"
										},
										{
											"begin": 1395,
											"end": 1461,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1468,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "JUMPDEST"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP2"
										},
										{
											"begin": 3035,
											"end": 3059,
											"name": "LT"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "DUP1"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "ISZERO"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "JUMPI"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 3075,
											"end": 3083,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 3075,
											"end": 3085,
											"name": "JUMPDEST"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP2"
										},
										{
											"begin": 3063,
											"end": 3085,
											"name": "LT"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 3035,
											"end": 3085,
											"name": "JUMPDEST"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "ISZERO"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "ISZERO"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "JUMPI"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "DUP1"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "REVERT"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 3027,
											"end": 3086,
											"name": "JUMPDEST"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP1"
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "DUP1"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "MLOAD"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "DUP1"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "6D696E5065725478000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "DUP2"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "MSTORE"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "POP"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "ADD"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "SWAP1"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "POP"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "SWAP1"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3146,
											"name": "MSTORE"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "MLOAD"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP3"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "MLOAD"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP4"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "ADD"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "POP"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "MLOAD"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "DUP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP2"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SUB"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "SWAP1"
										},
										{
											"begin": 3108,
											"end": 3147,
											"name": "KECCAK256"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "NOT"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "AND"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "NOT"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "AND"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "DUP2"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "MSTORE"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "ADD"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "SWAP1"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "DUP2"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "MSTORE"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "ADD"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3148,
											"name": "KECCAK256"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "DUP2"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SWAP1"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "SSTORE"
										},
										{
											"begin": 3096,
											"end": 3160,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "POP"
										},
										{
											"begin": 2958,
											"end": 3167,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 977,
											"end": 978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 955,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 955,
											"end": 978,
											"name": "GT"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "REVERT"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 947,
											"end": 979,
											"name": "JUMPDEST"
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 989,
											"end": 1000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "MLOAD"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "7265717569726564426C6F636B436F6E6669726D6174696F6E73000000000000"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "MSTORE"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1057,
											"name": "MSTORE"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP3"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "MLOAD"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "DUP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP2"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SUB"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "SWAP1"
										},
										{
											"begin": 1001,
											"end": 1058,
											"name": "KECCAK256"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "NOT"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "NOT"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "MSTORE"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "ADD"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "SWAP1"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "DUP2"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "MSTORE"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "ADD"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1059,
											"name": "KECCAK256"
										},
										{
											"begin": 989,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 989,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 989,
											"end": 1081,
											"name": "SSTORE"
										},
										{
											"begin": 989,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "PUSH",
											"value": "4FB76205CD57C896B21511D2114137D8E901B4CCD659E1A0F97D6306795264FB"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "DUP2"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1096,
											"end": 1149,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 1156,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 2565,
											"end": 2576,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "6461696C794C696D697400000000000000000000000000000000000000000000"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "MLOAD"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP3"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "MLOAD"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "ADD"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP4"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "ADD"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP2"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "POP"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "MLOAD"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "DUP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP2"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SUB"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "SWAP1"
										},
										{
											"begin": 2520,
											"end": 2561,
											"name": "KECCAK256"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "NOT"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "NOT"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2562,
											"name": "KECCAK256"
										},
										{
											"begin": 2508,
											"end": 2576,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2576,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2576,
											"name": "SSTORE"
										},
										{
											"begin": 2508,
											"end": 2576,
											"name": "POP"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "PUSH",
											"value": "AD4123AE17C414D9C6D2FEC478B402E6B01856CC250FD01FBFD252FDA0089D3C"
										},
										{
											"begin": 2609,
											"end": 2620,
											"name": "DUP2"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "MLOAD"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "DUP1"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "DUP3"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "DUP2"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "MSTORE"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "ADD"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "SWAP2"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "MLOAD"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "DUP1"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "SWAP2"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "SUB"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "SWAP1"
										},
										{
											"begin": 2591,
											"end": 2621,
											"name": "LOG1"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 579,
											"end": 592,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "DUP1"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "REVERT"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 571,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 658,
											"end": 667,
											"name": "DUP1"
										},
										{
											"begin": 603,
											"end": 614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "MLOAD"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "ADD"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "DUP1"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "DUP1"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "6761735072696365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "DUP2"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "MSTORE"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "ADD"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 625,
											"end": 653,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "MLOAD"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP3"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "MLOAD"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP4"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "MLOAD"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SUB"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 654,
											"name": "KECCAK256"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "NOT"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "NOT"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 603,
											"end": 655,
											"name": "KECCAK256"
										},
										{
											"begin": 603,
											"end": 667,
											"name": "DUP2"
										},
										{
											"begin": 603,
											"end": 667,
											"name": "SWAP1"
										},
										{
											"begin": 603,
											"end": 667,
											"name": "SSTORE"
										},
										{
											"begin": 603,
											"end": 667,
											"name": "POP"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "PUSH",
											"value": "52264B89E0FCEAFB26E79FD49EF8A366EB6297483BF4035B027F0C99A7AD512E"
										},
										{
											"begin": 698,
											"end": 707,
											"name": "DUP2"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "MLOAD"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "DUP3"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "DUP2"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "MSTORE"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "ADD"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SWAP2"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "POP"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "POP"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "MLOAD"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SWAP2"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SUB"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SWAP1"
										},
										{
											"begin": 682,
											"end": 708,
											"name": "LOG1"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 504,
											"end": 715,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 484,
											"end": 501,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 509,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SUB"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP8"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "GAS"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "CALL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP3"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 525,
											"name": "EQ"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "ISZERO"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPI"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "REVERT"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 476,
											"end": 526,
											"name": "JUMPDEST"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP2"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "LT"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "ISZERO"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "ISZERO"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "JUMPI"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "DUP1"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "REVERT"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 2838,
											"end": 2871,
											"name": "JUMPDEST"
										},
										{
											"begin": 2936,
											"end": 2945,
											"name": "DUP1"
										},
										{
											"begin": 2881,
											"end": 2892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "DUP1"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MLOAD"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "ADD"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "6D61785065725478000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DUP2"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MSTORE"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "POP"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "ADD"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "POP"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MSTORE"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "MLOAD"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP3"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "MLOAD"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "ADD"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP4"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "ADD"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP2"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "MLOAD"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP2"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SUB"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "SWAP1"
										},
										{
											"begin": 2893,
											"end": 2932,
											"name": "KECCAK256"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "NOT"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "NOT"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "AND"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "MSTORE"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "SWAP1"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "DUP2"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "MSTORE"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "ADD"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "KECCAK256"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "DUP2"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SWAP1"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "SSTORE"
										},
										{
											"begin": 2881,
											"end": 2945,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "POP"
										},
										{
											"begin": 2769,
											"end": 2952,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "DUP1"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "MLOAD"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "6D696E5065725478000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "DUP2"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "POP"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "ADD"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "POP"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1921,
											"name": "MSTORE"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP3"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP4"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SUB"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1883,
											"end": 1922,
											"name": "KECCAK256"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "NOT"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "NOT"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "DUP2"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "MSTORE"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "ADD"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "DUP2"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "MSTORE"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "ADD"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "KECCAK256"
										},
										{
											"begin": 1871,
											"end": 1923,
											"name": "SLOAD"
										},
										{
											"begin": 1864,
											"end": 1923,
											"name": "SWAP1"
										},
										{
											"begin": 1864,
											"end": 1923,
											"name": "POP"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1805,
											"end": 1930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "JUMPDEST"
										},
										{
											"begin": 3231,
											"end": 3235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3264,
											"name": "DUP1"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP4"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 3284,
											"end": 3297,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "JUMPDEST"
										},
										{
											"begin": 3267,
											"end": 3283,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "JUMPDEST"
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 3267,
											"end": 3304,
											"name": "SWAP1"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "SWAP2"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "SWAP1"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "AND"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "JUMPDEST"
										},
										{
											"begin": 3247,
											"end": 3313,
											"name": "SWAP1"
										},
										{
											"begin": 3247,
											"end": 3313,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP1"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 3330,
											"end": 3340,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "JUMPDEST"
										},
										{
											"begin": 3330,
											"end": 3355,
											"name": "LT"
										},
										{
											"begin": 3330,
											"end": 3355,
											"name": "ISZERO"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "DUP1"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "JUMPI"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 3370,
											"end": 3378,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 3359,
											"end": 3366,
											"name": "DUP4"
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "GT"
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "ISZERO"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 3330,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "DUP1"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "ISZERO"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "JUMPI"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "POP"
										},
										{
											"begin": 3395,
											"end": 3405,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 3395,
											"end": 3403,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3395,
											"end": 3405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3395,
											"end": 3405,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 3395,
											"end": 3405,
											"name": "JUMPDEST"
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP4"
										},
										{
											"begin": 3384,
											"end": 3405,
											"name": "LT"
										},
										{
											"begin": 3384,
											"end": 3405,
											"name": "ISZERO"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 3330,
											"end": 3405,
											"name": "JUMPDEST"
										},
										{
											"begin": 3323,
											"end": 3405,
											"name": "SWAP2"
										},
										{
											"begin": 3323,
											"end": 3405,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP2"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "POP"
										},
										{
											"begin": 3173,
											"end": 3412,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP1"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "MLOAD"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "ADD"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "DUP1"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "DUP1"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "6D61785065725478000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "DUP2"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "MSTORE"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "ADD"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "SWAP1"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "SWAP1"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2052,
											"name": "MSTORE"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "MLOAD"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP3"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "MLOAD"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "ADD"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP4"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "ADD"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP2"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "MLOAD"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP2"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SUB"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2053,
											"name": "KECCAK256"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "NOT"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "AND"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "NOT"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "AND"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "DUP2"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "MSTORE"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "ADD"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "SWAP1"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "DUP2"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "MSTORE"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "ADD"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "KECCAK256"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "SLOAD"
										},
										{
											"begin": 1995,
											"end": 2054,
											"name": "SWAP1"
										},
										{
											"begin": 1995,
											"end": 2054,
											"name": "POP"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "SWAP1"
										},
										{
											"begin": 1936,
											"end": 2061,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "JUMPDEST"
										},
										{
											"begin": 761,
											"end": 768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 798,
											"name": "DUP1"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "6761735072696365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 809,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "MLOAD"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP3"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "MLOAD"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP4"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP2"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "MLOAD"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP2"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SUB"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 838,
											"name": "KECCAK256"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "NOT"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "NOT"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "KECCAK256"
										},
										{
											"begin": 787,
											"end": 839,
											"name": "SLOAD"
										},
										{
											"begin": 780,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 780,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "SWAP1"
										},
										{
											"begin": 721,
											"end": 846,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "JUMPDEST"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "DUP1"
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "DUP5"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1080,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "DUP4"
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "LT"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "ISZERO"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "ISZERO"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "ISZERO"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "JUMPI"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "INVALID"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1131,
											"name": "DUP1"
										},
										{
											"begin": 1123,
											"end": 1131,
											"name": "SWAP2"
										},
										{
											"begin": 1123,
											"end": 1131,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "SWAP3"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "SWAP2"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1007,
											"end": 1136,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimTokens(address,address)": "69ffa08a",
							"dailyLimit()": "67eeba0c",
							"deployedAtBlock()": "9a454b99",
							"gasPrice()": "fe173b97",
							"getCurrentDay()": "3e6968b6",
							"isInitialized()": "392e53cd",
							"maxPerTx()": "f968adbe",
							"minPerTx()": "df25f3f0",
							"requiredBlockConfirmations()": "3f0a9f65",
							"requiredSignatures()": "8d068043",
							"setDailyLimit(uint256)": "b20d30a9",
							"setGasPrice(uint256)": "bf1fe420",
							"setMaxPerTx(uint256)": "c6f6f216",
							"setMinPerTx(uint256)": "a2a6ca27",
							"setRequiredBlockConfirmations(uint256)": "acf5c689",
							"totalSpentPerDay(uint256)": "2bd0bb05",
							"validatorContract()": "99439089",
							"withinLimit(uint256)": "ea9f4968"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_day\",\"type\":\"uint256\"}],\"name\":\"totalSpentPerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredBlockConfirmations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployedAtBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPerTx\",\"type\":\"uint256\"}],\"name\":\"setMinPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockConfirmations\",\"type\":\"uint256\"}],\"name\":\"setRequiredBlockConfirmations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"setGasPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxPerTx\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"GasPriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"requiredBlockConfirmations\",\"type\":\"uint256\"}],\"name\":\"RequiredBlockConfirmationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitChanged\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":\"BasicBridge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sentinel Bridge/contracts/IBridgeValidators.sol\":{\"keccak256\":\"0x0108a06f90ae7492d643d3760a98c69b28aa088abce61f0d0c17af3a8e6b1466\",\"urls\":[\"bzzr://6f0bb59cfa7b7de0e014ae6e291c781de9e1a7b58187cdb642b31e8f9e30a931\"]},\"Sentinel Bridge/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x1da6defc8347d6520a08d09f38e6c78865b8b8a9611f8081903d16aeecbeec60\",\"urls\":[\"bzzr://8d42f39a025e7e5e624e02cc1f00cde69e93004675bb8860170830318ba54a35\"]},\"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x20d82231b6d6530069f22085a39d480f9cb38b0ca30d055af515a36de41b23ae\",\"urls\":[\"bzzr://4867c977c55fe83389927f87409abe30779e26c0748c4dbf55ac58ae4dc36d13\"]},\"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol\":{\"keccak256\":\"0x978f0de1ce00f3f86df2a3ec4192a443622ba26c47554565463f3bb2b40f9111\",\"urls\":[\"bzzr://aa9ea21c412017fd48edce83d659d53ecbdec2ada71425d791d0b67a100c0ded\"]},\"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":{\"keccak256\":\"0x49900620538ca2e819d946d96c662c7f1ebb1a52094781d0bcc20b8541fc321b\",\"urls\":[\"bzzr://da1ee3dd2333799c3e71b31b65e28ba5418dd428cf13a0300253e93e98a614e5\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol": {
				"Validatable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "requiredSignatures",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "validatorContract",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":108:676  contract Validatable is EternalStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":108:676  contract Validatable is EternalStorage {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":108:676  contract Validatable is EternalStorage {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8d068043\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x99439089\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n    tag_6:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":600:607  uint256 */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:645  validatorContract() */\n      tag_11\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:643  validatorContract */\n      tag_9\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:645  validatorContract() */\n      jump\t// in\n    tag_11:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:664  validatorContract().requiredSignatures */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8d068043\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":626:666  validatorContract().requiredSignatures() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":619:666  return validatorContract().requiredSignatures() */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":550:673  function requiredSignatures() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n    tag_9:\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":202:219  IBridgeValidators */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:270  addressStorage */\n      0x2\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:320  addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))] */\n      0x0\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":281:318  abi.encodePacked(\"validatorContract\") */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x76616c696461746f72436f6e7472616374000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x11\n      add\n      swap1\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":281:318  abi.encodePacked(\"validatorContract\") */\n      swap1\n      0x40\n      mstore\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":271:319  keccak256(abi.encodePacked(\"validatorContract\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_16:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_16)\n    tag_17:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":271:319  keccak256(abi.encodePacked(\"validatorContract\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":256:320  addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))] */\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":231:321  return IBridgeValidators(addressStorage[keccak256(abi.encodePacked(\"validatorContract\"))]) */\n      swap1\n      pop\n        /* \"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":153:328  function validatorContract() public view returns(IBridgeValidators) {... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582013a1ffd92d47203ab8bdec9301156e28bae5aeb6937e03477dc04335fa0c8bb90029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610290806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d06804314610051578063994390891461007c575b600080fd5b34801561005d57600080fd5b506100666100d3565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b50610091610180565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006100dd610180565b73ffffffffffffffffffffffffffffffffffffffff16638d0680436040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561014057600080fd5b505af1158015610154573d6000803e3d6000fd5b505050506040513d602081101561016a57600080fd5b8101908080519060200190929190505050905090565b60006002600060405160200180807f76616c696461746f72436f6e747261637400000000000000000000000000000081525060110190506040516020818303038152906040526040518082805190602001908083835b6020831015156101fb57805182526020820191506020810190506020830392506101d6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582013a1ffd92d47203ab8bdec9301156e28bae5aeb6937e03477dc04335fa0c8bb90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8D068043 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xDD PUSH2 0x180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8D068043 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x76616C696461746F72436F6E7472616374000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1FB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SGT LOG1 SELFDESTRUCT 0xd9 0x2d 0x47 KECCAK256 GASPRICE 0xb8 0xbd 0xec SWAP4 ADD ISZERO PUSH15 0x28BAE5AEB6937E03477DC04335FA0C DUP12 0xb9 STOP 0x29 ",
							"sourceMap": "108:568:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:568:4;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d06804314610051578063994390891461007c575b600080fd5b34801561005d57600080fd5b506100666100d3565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b50610091610180565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006100dd610180565b73ffffffffffffffffffffffffffffffffffffffff16638d0680436040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561014057600080fd5b505af1158015610154573d6000803e3d6000fd5b505050506040513d602081101561016a57600080fd5b8101908080519060200190929190505050905090565b60006002600060405160200180807f76616c696461746f72436f6e747261637400000000000000000000000000000081525060110190506040516020818303038152906040526040518082805190602001908083835b6020831015156101fb57805182526020820191506020810190506020830392506101d6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582013a1ffd92d47203ab8bdec9301156e28bae5aeb6937e03477dc04335fa0c8bb90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8D068043 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x99439089 EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xDD PUSH2 0x180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8D068043 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x154 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x76616C696461746F72436F6E7472616374000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1FB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SGT LOG1 SELFDESTRUCT 0xd9 0x2d 0x47 KECCAK256 GASPRICE 0xb8 0xbd 0xec SWAP4 ADD ISZERO PUSH15 0x28BAE5AEB6937E03477DC04335FA0C DUP12 0xb9 STOP 0x29 ",
							"sourceMap": "108:568:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:123:4;;;;;;;;;;;;;;;;;;;;;;;153:175;;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:175:4;;;;;;;;;;;;;;;;;;;;;;;;;;;550:123;600:7;626:19;:17;:19::i;:::-;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;626:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;626:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;626:40:4;;;;;;;;;;;;;;;;619:47;;550:123;:::o;153:175::-;202:17;256:14;:64;281:37;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;281:37:4;;;271:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;271:48:4;;;;;;;;;;;;;;;;256:64;;;;;;;;;;;;;;;;;;;;;;;;;;;231:90;;153:175;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "131200",
								"executionCost": "177",
								"totalCost": "131377"
							},
							"external": {
								"requiredSignatures()": "infinite",
								"validatorContract()": "917"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "MSTORE"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "POP"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "DUP1"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "CODECOPY"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 108,
									"end": 676,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582013a1ffd92d47203ab8bdec9301156e28bae5aeb6937e03477dc04335fa0c8bb90029",
									".code": [
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "LT"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "JUMPI"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "DIV"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "8D068043"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "EQ"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "JUMPI"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "99439089"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "EQ"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "JUMPI"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 676,
											"name": "REVERT"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP3"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MSTORE"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SUB"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "RETURN"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP3"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "AND"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "AND"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MSTORE"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "ADD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "MLOAD"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "DUP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP2"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SUB"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "RETURN"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 600,
											"end": 607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 626,
											"end": 643,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"value": "8D068043"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MUL"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP8"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "GAS"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "CALL"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP3"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 619,
											"end": 666,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 666,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMPDEST"
										},
										{
											"begin": 202,
											"end": 219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 270,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "76616C696461746F72436F6E7472616374000000000000000000000000000000"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP4"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 319,
											"name": "KECCAK256"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "KECCAK256"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SLOAD"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "EXP"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "DIV"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 256,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "SWAP1"
										},
										{
											"begin": 153,
											"end": 328,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"requiredSignatures()": "8d068043",
							"validatorContract()": "99439089"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"requiredSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":\"Validatable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Sentinel Bridge/contracts/IBridgeValidators.sol\":{\"keccak256\":\"0x0108a06f90ae7492d643d3760a98c69b28aa088abce61f0d0c17af3a8e6b1466\",\"urls\":[\"bzzr://6f0bb59cfa7b7de0e014ae6e291c781de9e1a7b58187cdb642b31e8f9e30a931\"]},\"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol\":{\"keccak256\":\"0x20d82231b6d6530069f22085a39d480f9cb38b0ca30d055af515a36de41b23ae\",\"urls\":[\"bzzr://4867c977c55fe83389927f87409abe30779e26c0748c4dbf55ac58ae4dc36d13\"]},\"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol\":{\"keccak256\":\"0x49900620538ca2e819d946d96c662c7f1ebb1a52094781d0bcc20b8541fc321b\",\"urls\":[\"bzzr://da1ee3dd2333799c3e71b31b65e28ba5418dd428cf13a0300253e93e98a614e5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Sentinel Bridge/contracts/IBridgeValidators.sol:5:5: Warning: Functions in interfaces should be declared external.\n    function isValidator(address _validator) public view returns(bool);\n    ^-----------------------------------------------------------------^\n",
				"message": "Functions in interfaces should be declared external.",
				"severity": "warning",
				"sourceLocation": {
					"end": 127,
					"file": "Sentinel Bridge/contracts/IBridgeValidators.sol",
					"start": 60
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Sentinel Bridge/contracts/IBridgeValidators.sol:6:5: Warning: Functions in interfaces should be declared external.\n    function requiredSignatures() public view returns(uint256);\n    ^---------------------------------------------------------^\n",
				"message": "Functions in interfaces should be declared external.",
				"severity": "warning",
				"sourceLocation": {
					"end": 191,
					"file": "Sentinel Bridge/contracts/IBridgeValidators.sol",
					"start": 132
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Sentinel Bridge/contracts/IBridgeValidators.sol:7:5: Warning: Functions in interfaces should be declared external.\n    function owner() public view returns(address);\n    ^--------------------------------------------^\n",
				"message": "Functions in interfaces should be declared external.",
				"severity": "warning",
				"sourceLocation": {
					"end": 242,
					"file": "Sentinel Bridge/contracts/IBridgeValidators.sol",
					"start": 196
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Sentinel Bridge/contracts/IBridgeValidators.sol": {
				"ast": {
					"absolutePath": "Sentinel Bridge/contracts/IBridgeValidators.sol",
					"exportedSymbols": {
						"IBridgeValidators": [
							19
						]
					},
					"id": 20,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IBridgeValidators",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 8,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isValidator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "_validator",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "81:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "120:6:0"
									},
									"scope": 19,
									"src": "60:67:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "requiredSignatures",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "182:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "181:9:0"
									},
									"scope": 19,
									"src": "132:59:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 18,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:9:0"
									},
									"scope": 19,
									"src": "196:46:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 20,
							"src": "26:218:0"
						}
					],
					"src": "0:245:0"
				},
				"id": 0
			},
			"Sentinel Bridge/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "Sentinel Bridge/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							117
						]
					},
					"id": 118,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "269:106:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "284:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "279:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 36,
												"nodeType": "IfStatement",
												"src": "275:35:1",
												"trueBody": {
													"id": 35,
													"nodeType": "Block",
													"src": "287:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "302:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 29,
															"id": 34,
															"nodeType": "Return",
															"src": "295:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "315:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "315:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 39,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "327:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 40,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "331:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "327:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "315:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 44,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "345:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "349:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "345:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 47,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "354:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "345:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "338:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "338:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "338:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 38,
													"src": "369:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 52,
												"nodeType": "Return",
												"src": "362:8:1"
											}
										]
									},
									"documentation": "@dev Multiplies two numbers, throws on overflow.",
									"id": 54,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "215:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "226:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "214:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "260:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "259:9:1"
									},
									"scope": 117,
									"src": "202:173:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "524:198:1",
										"statements": [
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "604:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "604:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "616:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "620:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "616:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "716:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 62,
												"id": 70,
												"nodeType": "Return",
												"src": "709:8:1"
											}
										]
									},
									"documentation": "@dev Integer division of two numbers, truncating the quotient.",
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "470:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "481:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "515:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "514:9:1"
									},
									"scope": 117,
									"src": "457:265:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "902:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 82,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "915:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "920:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "915:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "908:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "908:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "908:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 87,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "935:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 88,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "939:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "935:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 90,
												"nodeType": "Return",
												"src": "928:12:1"
											}
										]
									},
									"documentation": "@dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).",
									"id": 92,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "848:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "859:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "847:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "893:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "892:9:1"
									},
									"scope": 117,
									"src": "835:110:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1074:62:1",
										"statements": [
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "1080:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1080:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 103,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1092:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1096:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1092:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1080:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1110:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1115:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1110:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 107,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "1103:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1103:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "1130:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "1123:8:1"
											}
										]
									},
									"documentation": "@dev Adds two numbers, throws on overflow.",
									"id": 116,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1020:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1031:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:9:1"
									},
									"scope": 117,
									"src": "1007:129:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 118,
							"src": "116:1022:1"
						}
					],
					"src": "0:1139:1"
				},
				"id": 1
			},
			"Sentinel Bridge/contracts/upgradeability/EternalStorage.sol": {
				"ast": {
					"absolutePath": "Sentinel Bridge/contracts/upgradeability/EternalStorage.sol",
					"exportedSymbols": {
						"EternalStorage": [
							144
						]
					},
					"id": 145,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title EternalStorage\n@dev This contract holds all the necessary state variables to carry out the storage of any contract.",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "EternalStorage",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 123,
									"name": "uintStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "194:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
										"typeString": "mapping(bytes32 => uint256)"
									},
									"typeName": {
										"id": 122,
										"keyType": {
											"id": 120,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "202:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "194:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
											"typeString": "mapping(bytes32 => uint256)"
										},
										"valueType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "213:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 127,
									"name": "stringStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "248:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_string_storage_$",
										"typeString": "mapping(bytes32 => string)"
									},
									"typeName": {
										"id": 126,
										"keyType": {
											"id": 124,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "256:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "248:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_string_storage_$",
											"typeString": "mapping(bytes32 => string)"
										},
										"valueType": {
											"id": 125,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "267:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 131,
									"name": "addressStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "303:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 130,
										"keyType": {
											"id": 128,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "311:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "303:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "322:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 135,
									"name": "bytesStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "360:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
										"typeString": "mapping(bytes32 => bytes)"
									},
									"typeName": {
										"id": 134,
										"keyType": {
											"id": 132,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "368:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "360:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
											"typeString": "mapping(bytes32 => bytes)"
										},
										"valueType": {
											"id": 133,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "379:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 139,
									"name": "boolStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "413:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 136,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "421:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "413:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueType": {
											"id": 137,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "432:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 143,
									"name": "intStorage",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "464:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_int256_$",
										"typeString": "mapping(bytes32 => int256)"
									},
									"typeName": {
										"id": 142,
										"keyType": {
											"id": 140,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "464:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_int256_$",
											"typeString": "mapping(bytes32 => int256)"
										},
										"valueType": {
											"id": 141,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "483:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "163:351:2"
						}
					],
					"src": "0:515:2"
				},
				"id": 2
			},
			"Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol": {
				"ast": {
					"absolutePath": "Sentinel Bridge/contracts/upgradeable_contracts/BasicBridge.sol",
					"exportedSymbols": {
						"BasicBridge": [
							568
						]
					},
					"id": 569,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/IBridgeValidators.sol",
							"file": "../IBridgeValidators.sol",
							"id": 147,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 20,
							"src": "24:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/upgradeability/EternalStorage.sol",
							"file": "../upgradeability/EternalStorage.sol",
							"id": 148,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 145,
							"src": "59:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 149,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 118,
							"src": "106:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol",
							"file": "./Validatable.sol",
							"id": 150,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 631,
							"src": "142:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
							"file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
							"id": 151,
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 663,
							"src": "170:68:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 152,
										"name": "EternalStorage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 144,
										"src": "265:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EternalStorage_$144",
											"typeString": "contract EternalStorage"
										}
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "265:14:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 154,
										"name": "Validatable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 630,
										"src": "281:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Validatable_$630",
											"typeString": "contract Validatable"
										}
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "281:11:3"
								}
							],
							"contractDependencies": [
								144,
								630
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								630,
								144
							],
							"name": "BasicBridge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 158,
									"libraryName": {
										"contractScope": null,
										"id": 156,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "305:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$117",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "299:27:3",
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 162,
									"name": "GasPriceChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"name": "gasPrice",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "353:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:18:3"
									},
									"src": "331:40:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 166,
									"name": "RequiredBlockConfirmationChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"name": "requiredBlockConfirmations",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "415:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:36:3"
									},
									"src": "376:75:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 170,
									"name": "DailyLimitChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"name": "newLimit",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "480:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "479:18:3"
									},
									"src": "456:42:3"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "561:154:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 178,
																"name": "_gasPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "579:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "591:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "579:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "571:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "571:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "571:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 183,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "603:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "6761735072696365",
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "642:10:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_55b3774520b5993024893d303890baa4e84b1244a43c60034d1ced2d3cf2b04b",
																				"typeString": "literal_string \"gasPrice\""
																			},
																			"value": "gasPrice"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_55b3774520b5993024893d303890baa4e84b1244a43c60034d1ced2d3cf2b04b",
																				"typeString": "literal_string \"gasPrice\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 185,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "625:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "625:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "625:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 184,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "615:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "615:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "603:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 191,
														"name": "_gasPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "658:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "603:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "603:64:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 195,
															"name": "_gasPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "698:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 194,
														"name": "GasPriceChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "682:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "682:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "EmitStatement",
												"src": "677:31:3"
											}
										]
									},
									"documentation": null,
									"id": 199,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 175,
											"modifierName": {
												"argumentTypes": null,
												"id": 174,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "551:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "551:9:3"
										}
									],
									"name": "setGasPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"name": "_gasPrice",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "525:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:19:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:3"
									},
									"scope": 568,
									"src": "504:211:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "770:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 204,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "787:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 211,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6761735072696365",
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "826:10:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_55b3774520b5993024893d303890baa4e84b1244a43c60034d1ced2d3cf2b04b",
																			"typeString": "literal_string \"gasPrice\""
																		},
																		"value": "gasPrice"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_55b3774520b5993024893d303890baa4e84b1244a43c60034d1ced2d3cf2b04b",
																			"typeString": "literal_string \"gasPrice\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 206,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "809:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "809:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "809:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 205,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "799:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "799:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "787:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 203,
												"id": 212,
												"nodeType": "Return",
												"src": "780:59:3"
											}
										]
									},
									"documentation": null,
									"id": 214,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "gasPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "761:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "760:9:3"
									},
									"scope": 568,
									"src": "721:125:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "937:219:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "_blockConfirmations",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "955:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "977:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "955:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "947:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 227,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "989:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 234,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "7265717569726564426c6f636b436f6e6669726d6174696f6e73",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1028:28:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_916daedf6915000ff68ced2f0b6773fe6f2582237f92c3c95bb4d79407230071",
																				"typeString": "literal_string \"requiredBlockConfirmations\""
																			},
																			"value": "requiredBlockConfirmations"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_916daedf6915000ff68ced2f0b6773fe6f2582237f92c3c95bb4d79407230071",
																				"typeString": "literal_string \"requiredBlockConfirmations\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 229,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1011:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1011:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1011:46:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 228,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1001:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1001:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "989:70:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 235,
														"name": "_blockConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1062:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "989:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "989:92:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 239,
															"name": "_blockConfirmations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1129:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 238,
														"name": "RequiredBlockConfirmationChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1096:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "EmitStatement",
												"src": "1091:58:3"
											}
										]
									},
									"documentation": null,
									"id": 243,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 219,
											"modifierName": {
												"argumentTypes": null,
												"id": 218,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "927:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "927:9:3"
										}
									],
									"name": "setRequiredBlockConfirmations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "_blockConfirmations",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "891:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "890:29:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:0:3"
									},
									"scope": 568,
									"src": "852:304:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1229:94:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 248,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1246:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 255,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "7265717569726564426c6f636b436f6e6669726d6174696f6e73",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1285:28:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_916daedf6915000ff68ced2f0b6773fe6f2582237f92c3c95bb4d79407230071",
																			"typeString": "literal_string \"requiredBlockConfirmations\""
																		},
																		"value": "requiredBlockConfirmations"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_916daedf6915000ff68ced2f0b6773fe6f2582237f92c3c95bb4d79407230071",
																			"typeString": "literal_string \"requiredBlockConfirmations\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 250,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1268:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1268:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1268:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 249,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1258:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1258:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1246:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 256,
												"nodeType": "Return",
												"src": "1239:77:3"
											}
										]
									},
									"documentation": null,
									"id": 258,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "requiredBlockConfirmations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1220:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1219:9:3"
									},
									"scope": 568,
									"src": "1162:161:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "1385:83:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1402:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 270,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6465706c6f7965644174426c6f636b",
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1441:17:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b120ceec05576ad0c710bc6e85f1768535e27554458f05dcbb5c65b8c7a749b0",
																			"typeString": "literal_string \"deployedAtBlock\""
																		},
																		"value": "deployedAtBlock"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_b120ceec05576ad0c710bc6e85f1768535e27554458f05dcbb5c65b8c7a749b0",
																			"typeString": "literal_string \"deployedAtBlock\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 265,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1424:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1424:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1424:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 264,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1414:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1414:46:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1402:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 271,
												"nodeType": "Return",
												"src": "1395:66:3"
											}
										]
									},
									"documentation": null,
									"id": 273,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "deployedAtBlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1376:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1375:9:3"
									},
									"scope": 568,
									"src": "1329:139:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1542:92:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 280,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1552:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 288,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "746f74616c5370656e74506572446179",
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1591:18:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_88de7017121de690dcfdabf6b5cd7a5009e68f417ba1051c2a00dca13792f6af",
																				"typeString": "literal_string \"totalSpentPerDay\""
																			},
																			"value": "totalSpentPerDay"
																		},
																		{
																			"argumentTypes": null,
																			"id": 285,
																			"name": "_day",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "1611:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_88de7017121de690dcfdabf6b5cd7a5009e68f417ba1051c2a00dca13792f6af",
																				"typeString": "literal_string \"totalSpentPerDay\""
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 282,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "1574:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1574:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1574:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 281,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1564:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1552:66:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 289,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "1621:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1552:75:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1552:75:3"
											}
										]
									},
									"documentation": null,
									"id": 293,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setTotalSpentPerDay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "_day",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1503:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1517:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1502:30:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1542:0:3"
									},
									"scope": 568,
									"src": "1474:160:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1709:90:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1726:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 308,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "746f74616c5370656e74506572446179",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1765:18:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_88de7017121de690dcfdabf6b5cd7a5009e68f417ba1051c2a00dca13792f6af",
																			"typeString": "literal_string \"totalSpentPerDay\""
																		},
																		"value": "totalSpentPerDay"
																	},
																	{
																		"argumentTypes": null,
																		"id": 305,
																		"name": "_day",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "1785:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_88de7017121de690dcfdabf6b5cd7a5009e68f417ba1051c2a00dca13792f6af",
																			"typeString": "literal_string \"totalSpentPerDay\""
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 302,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1748:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1748:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1748:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 301,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1738:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1738:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1726:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 309,
												"nodeType": "Return",
												"src": "1719:73:3"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSpentPerDay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "_day",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1666:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1665:14:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1700:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1699:9:3"
									},
									"scope": 568,
									"src": "1640:159:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "1854:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1871:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 323,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6d696e5065725478",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1910:10:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d1",
																			"typeString": "literal_string \"minPerTx\""
																		},
																		"value": "minPerTx"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_bbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d1",
																			"typeString": "literal_string \"minPerTx\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 318,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1893:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1893:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1893:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 317,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1883:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1883:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1871:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 315,
												"id": 324,
												"nodeType": "Return",
												"src": "1864:59:3"
											}
										]
									},
									"documentation": null,
									"id": 326,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "minPerTx",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1845:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1844:9:3"
									},
									"scope": 568,
									"src": "1805:125:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1985:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2002:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 338,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6d61785065725478",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:10:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c",
																			"typeString": "literal_string \"maxPerTx\""
																		},
																		"value": "maxPerTx"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c",
																			"typeString": "literal_string \"maxPerTx\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 333,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2024:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2024:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2024:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 332,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2014:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2002:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 330,
												"id": 339,
												"nodeType": "Return",
												"src": "1995:59:3"
											}
										]
									},
									"documentation": null,
									"id": 341,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "maxPerTx",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1976:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1975:9:3"
									},
									"scope": 568,
									"src": "1936:125:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2113:84:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 346,
															"name": "boolStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2123:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 353,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "6973496e697469616c697a6564",
																			"id": 350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2162:15:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba",
																				"typeString": "literal_string \"isInitialized\""
																			},
																			"value": "isInitialized"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba",
																				"typeString": "literal_string \"isInitialized\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 348,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "2145:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2145:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 347,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "2135:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2135:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2123:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 354,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2183:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2123:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "2123:67:3"
											}
										]
									},
									"documentation": null,
									"id": 358,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setInitialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "_status",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2090:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2090:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2089:14:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:0:3"
									},
									"scope": 568,
									"src": "2067:130:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2254:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 363,
														"name": "boolStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "2271:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 370,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6973496e697469616c697a6564",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2310:15:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba",
																			"typeString": "literal_string \"isInitialized\""
																		},
																		"value": "isInitialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0a6f646cd611241d8073675e00d1a1ff700fbf1b53fcf473de56d1e6e4b714ba",
																			"typeString": "literal_string \"isInitialized\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 365,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2293:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2293:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2293:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 364,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2283:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2283:44:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2271:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 362,
												"id": 371,
												"nodeType": "Return",
												"src": "2264:64:3"
											}
										]
									},
									"documentation": null,
									"id": 373,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isInitialized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2248:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2247:6:3"
									},
									"scope": 568,
									"src": "2203:132:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2395:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 378,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2412:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2418:6:3",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2412:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 377,
												"id": 381,
												"nodeType": "Return",
												"src": "2405:19:3"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCurrentDay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2386:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2385:9:3"
									},
									"scope": 568,
									"src": "2341:90:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "2498:130:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 390,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2508:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 397,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "6461696c794c696d6974",
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2547:12:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5",
																				"typeString": "literal_string \"dailyLimit\""
																			},
																			"value": "dailyLimit"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5",
																				"typeString": "literal_string \"dailyLimit\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 392,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "2530:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2530:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2530:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 391,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "2520:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2508:54:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2565:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2508:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "2508:68:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 402,
															"name": "_dailyLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2609:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "DailyLimitChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "2591:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2591:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "EmitStatement",
												"src": "2586:35:3"
											}
										]
									},
									"documentation": null,
									"id": 406,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 388,
											"modifierName": {
												"argumentTypes": null,
												"id": 387,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "2488:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2488:9:3"
										}
									],
									"name": "setDailyLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"name": "_dailyLimit",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2460:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2459:21:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2498:0:3"
									},
									"scope": 568,
									"src": "2437:191:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "2685:78:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "uintStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2702:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 418,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6461696c794c696d6974",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2741:12:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5",
																			"typeString": "literal_string \"dailyLimit\""
																		},
																		"value": "dailyLimit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5",
																			"typeString": "literal_string \"dailyLimit\""
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 413,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2724:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2724:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2724:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 412,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2714:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2714:41:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2702:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 410,
												"id": 419,
												"nodeType": "Return",
												"src": "2695:61:3"
											}
										]
									},
									"documentation": null,
									"id": 421,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "dailyLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2653:2:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2676:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2675:9:3"
									},
									"scope": 568,
									"src": "2634:129:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2828:124:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 429,
																"name": "_maxPerTx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2846:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 430,
																	"name": "dailyLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2858:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2858:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2846:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "2838:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2838:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "2838:33:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 435,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2881:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 442,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "6d61785065725478",
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2920:10:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c",
																				"typeString": "literal_string \"maxPerTx\""
																			},
																			"value": "maxPerTx"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c",
																				"typeString": "literal_string \"maxPerTx\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 437,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "2903:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2903:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2903:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 436,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "2893:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2893:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2881:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "_maxPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2936:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2881:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "2881:64:3"
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 426,
											"modifierName": {
												"argumentTypes": null,
												"id": 425,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "2818:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2818:9:3"
										}
									],
									"name": "setMaxPerTx",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"name": "_maxPerTx",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2790:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2789:19:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2828:0:3"
									},
									"scope": 568,
									"src": "2769:183:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "3017:150:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 455,
																	"name": "_minPerTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "3035:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 456,
																		"name": "dailyLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "3047:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3047:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3035:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 459,
																	"name": "_minPerTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "3063:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 460,
																		"name": "maxPerTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "3075:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3075:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3063:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3035:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "3027:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "3027:59:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 466,
															"name": "uintStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3096:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 473,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "6d696e5065725478",
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3135:10:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_bbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d1",
																				"typeString": "literal_string \"minPerTx\""
																			},
																			"value": "minPerTx"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_bbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d1",
																				"typeString": "literal_string \"minPerTx\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 468,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 664,
																			"src": "3118:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3118:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3118:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 467,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "3108:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3108:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3096:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "_minPerTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3151:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3096:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "3096:64:3"
											}
										]
									},
									"documentation": null,
									"id": 478,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 452,
											"modifierName": {
												"argumentTypes": null,
												"id": 451,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "3007:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3007:9:3"
										}
									],
									"name": "setMinPerTx",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"name": "_minPerTx",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2979:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2978:19:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3017:0:3"
									},
									"scope": 568,
									"src": "2958:209:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3237:175:3",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"name": "nextLimit",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "3247:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3247:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 492,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3305:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 488,
																		"name": "getCurrentDay",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "3284:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3284:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 487,
																"name": "totalSpentPerDay",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3267:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3267:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "3267:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3267:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3247:66:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 495,
																	"name": "dailyLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "3330:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3330:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "nextLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "3346:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3330:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 499,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3359:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 500,
																	"name": "maxPerTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3370:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3370:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3359:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3330:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 504,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3384:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 505,
																"name": "minPerTx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "3395:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3395:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3384:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3330:75:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 484,
												"id": 509,
												"nodeType": "Return",
												"src": "3323:82:3"
											}
										]
									},
									"documentation": null,
									"id": 511,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "withinLimit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3194:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:17:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3231:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3231:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3230:6:3"
									},
									"scope": 568,
									"src": "3173:239:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3485:302:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 521,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3503:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3518:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3510:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3510:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3503:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "3495:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "3495:26:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "3535:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3553:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3545:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3535:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 544,
												"nodeType": "IfStatement",
												"src": "3531:106:3",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "3557:80:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 537,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 700,
																					"src": "3592:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_BasicBridge_$568",
																						"typeString": "contract BasicBridge"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_BasicBridge_$568",
																						"typeString": "contract BasicBridge"
																					}
																				],
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3584:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3584:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3584:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 533,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "3571:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3571:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3571:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "3571:35:3"
														},
														{
															"expression": null,
															"functionReturnParameters": 519,
															"id": 542,
															"nodeType": "Return",
															"src": "3620:7:3"
														}
													]
												}
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"name": "token",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "3647:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20Basic_$662",
															"typeString": "contract ERC20Basic"
														},
														"typeName": {
															"contractScope": null,
															"id": 545,
															"name": "ERC20Basic",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 662,
															"src": "3647:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Basic_$662",
																"typeString": "contract ERC20Basic"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 548,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3677:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 547,
														"name": "ERC20Basic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3666:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20Basic_$662_$",
															"typeString": "type(contract ERC20Basic)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3666:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20Basic_$662",
														"typeString": "contract ERC20Basic"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3647:37:3"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "3694:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3694:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 555,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3728:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_BasicBridge_$568",
																"typeString": "contract BasicBridge"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_BasicBridge_$568",
																"typeString": "contract BasicBridge"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3712:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Basic_$662",
																"typeString": "contract ERC20Basic"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 644,
														"src": "3712:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3694:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 561,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "3766:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 562,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "3771:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 559,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3751:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Basic_$662",
																		"typeString": "contract ERC20Basic"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 653,
																"src": "3751:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3751:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "3743:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3743:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "3743:37:3"
											}
										]
									},
									"documentation": null,
									"id": 567,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 518,
											"modifierName": {
												"argumentTypes": null,
												"id": 517,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 618,
												"src": "3475:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3475:9:3"
										}
									],
									"name": "claimTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3439:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3455:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3438:29:3"
									},
									"payable": false,
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3485:0:3"
									},
									"scope": 568,
									"src": "3418:369:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 569,
							"src": "241:3549:3"
						}
					],
					"src": "0:3791:3"
				},
				"id": 3
			},
			"Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol": {
				"ast": {
					"absolutePath": "Sentinel Bridge/contracts/upgradeable_contracts/Validatable.sol",
					"exportedSymbols": {
						"Validatable": [
							630
						]
					},
					"id": 631,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 570,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/IBridgeValidators.sol",
							"file": "../IBridgeValidators.sol",
							"id": 571,
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 20,
							"src": "24:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Sentinel Bridge/contracts/upgradeability/EternalStorage.sol",
							"file": "../upgradeability/EternalStorage.sol",
							"id": 572,
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 145,
							"src": "59:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 573,
										"name": "EternalStorage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 144,
										"src": "132:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EternalStorage_$144",
											"typeString": "contract EternalStorage"
										}
									},
									"id": 574,
									"nodeType": "InheritanceSpecifier",
									"src": "132:14:4"
								}
							],
							"contractDependencies": [
								144
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								144
							],
							"name": "Validatable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "221:107:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 580,
																"name": "addressStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "256:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																	"typeString": "mapping(bytes32 => address)"
																}
															},
															"id": 587,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "76616c696461746f72436f6e7472616374",
																				"id": 584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "298:19:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_5a74bb7e202fb8e4bf311841c7d64ec19df195fee77d7e7ae749b27921b6ddfe",
																					"typeString": "literal_string \"validatorContract\""
																				},
																				"value": "validatorContract"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_5a74bb7e202fb8e4bf311841c7d64ec19df195fee77d7e7ae749b27921b6ddfe",
																					"typeString": "literal_string \"validatorContract\""
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 582,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 664,
																				"src": "281:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "281:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "281:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 581,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "271:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																		"typeString": "function () pure returns (bytes32)"
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "271:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "256:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 579,
														"name": "IBridgeValidators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "238:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IBridgeValidators_$19_$",
															"typeString": "type(contract IBridgeValidators)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "238:83:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBridgeValidators_$19",
														"typeString": "contract IBridgeValidators"
													}
												},
												"functionReturnParameters": 578,
												"id": 589,
												"nodeType": "Return",
												"src": "231:90:4"
											}
										]
									},
									"documentation": null,
									"id": 591,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "validatorContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "202:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBridgeValidators_$19",
													"typeString": "contract IBridgeValidators"
												},
												"typeName": {
													"contractScope": null,
													"id": 576,
													"name": "IBridgeValidators",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 19,
													"src": "202:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBridgeValidators_$19",
														"typeString": "contract IBridgeValidators"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "201:19:4"
									},
									"scope": 630,
									"src": "153:175:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "359:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 597,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "409:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "409:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 594,
																		"name": "validatorContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "377:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IBridgeValidators_$19_$",
																			"typeString": "function () view returns (contract IBridgeValidators)"
																		}
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "377:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBridgeValidators_$19",
																		"typeString": "contract IBridgeValidators"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isValidator",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "377:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "377:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "369:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "369:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "369:52:4"
											},
											{
												"id": 602,
												"nodeType": "PlaceholderStatement",
												"src": "431:1:4"
											}
										]
									},
									"documentation": null,
									"id": 604,
									"name": "onlyValidator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:4"
									},
									"src": "334:105:4",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "466:78:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 607,
																			"name": "validatorContract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "484:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IBridgeValidators_$19_$",
																				"typeString": "function () view returns (contract IBridgeValidators)"
																			}
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "484:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBridgeValidators_$19",
																			"typeString": "contract IBridgeValidators"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "484:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "484:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "515:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "515:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "484:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															680,
															681
														],
														"referencedDeclaration": 680,
														"src": "476:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "476:50:4"
											},
											{
												"id": 616,
												"nodeType": "PlaceholderStatement",
												"src": "536:1:4"
											}
										]
									},
									"documentation": null,
									"id": 618,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:4"
									},
									"src": "445:99:4",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "609:64:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 623,
																"name": "validatorContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "626:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IBridgeValidators_$19_$",
																	"typeString": "function () view returns (contract IBridgeValidators)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "626:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBridgeValidators_$19",
																"typeString": "contract IBridgeValidators"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "requiredSignatures",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "626:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 627,
												"nodeType": "Return",
												"src": "619:47:4"
											}
										]
									},
									"documentation": null,
									"id": 629,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "requiredSignatures",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:2:4"
									},
									"payable": false,
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "600:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "599:9:4"
									},
									"scope": 630,
									"src": "550:123:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 631,
							"src": "108:568:4"
						}
					],
					"src": "0:677:4"
				},
				"id": 4
			},
			"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
					"exportedSymbols": {
						"ERC20Basic": [
							662
						]
					},
					"id": 663,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\nSee https://github.com/ethereum/EIPs/issues/179",
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 637,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "218:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "217:9:5"
									},
									"scope": 662,
									"src": "174:53:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 644,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "249:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "248:14:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "284:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "283:9:5"
									},
									"scope": 662,
									"src": "230:63:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 653,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "314:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "327:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "313:29:5"
									},
									"payable": false,
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "359:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 650,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "359:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "358:6:5"
									},
									"scope": 662,
									"src": "296:69:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 661,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "383:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "405:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:57:5"
									},
									"src": "368:72:5"
								}
							],
							"scope": 663,
							"src": "150:292:5"
						}
					],
					"src": "0:443:5"
				},
				"id": 5
			}
		}
	}
}